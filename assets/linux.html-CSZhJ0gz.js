import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as i,e as l}from"./app-SD3SAAIy.js";const o={},n=l('<h2 id="基础linux文件处理操作" tabindex="-1"><a class="header-anchor" href="#基础linux文件处理操作"><span>基础linux文件处理操作</span></a></h2><ul><li>cd：change directory，改变工作目录：“..”代表当前目录的上一级目录，“.”则代表当前目录，“~”代表用户主目录。</li><li>相对目录与绝对目录：相对目录：在输入路径时，最前面的不是/或<sub>，表示相对当前目录所在的目录；绝对目录：在输入路径时，最前面的是/或</sub>。</li><li>pwd：print work directory，显示当前工作目录的绝对路径</li><li>mkdir：make directory，<code>mkdir test</code>：创建新的文件夹test</li><li>ls：list，列出目录的全部内容：ls -a 显示当前目录中所有文件，包含隐藏文件；ls -l 以列表方式显示文件的详细信息；ls -h 配合ls以人性化的方式显示文件大小。 <ul><li>ls通配符：*代表任意个数字符，？代表任意一个字符，[]匹配字符组中的任意一个，[a,b,c]匹配abc中的任意一个，[a-f]匹配a-f范围内任意一个。</li><li>ls通配符使用：<code>ls 1*a?.txt</code>：意思是会匹配出如123af.txt和1ad.txt之类的文件。</li></ul></li><li>touch：如果文件不存在，则创建新的文件；如果文件存在，则修改文件的修改日期</li><li>mv：move，移动文件，也可给文件或目录重命名：<code>mv test_file ../test</code>，也可以重命名：<code>mv 1.py 2.py</code>。</li><li>cp：copy，复制文件：移动文件到链接下：<code>cp file.txt /path/to/destination/</code>； <ul><li>移动文件到链接下并重命名：<code>cp file.txt /path/to/destination/file2.txt</code>；</li><li>不复制文件，只生成链接文件：<code>cp -i file.txt /path/to/destination/</code></li></ul></li><li>rm：remove，删除文件或文件夹，不能恢复。-f：强制删除，忽略不存在的文件，-r：递归地删除目录下的内容，删除文件夹时必须加此参数</li><li>sudo：substitute user do用于提升用户权限，以管理员方式运行</li><li>tree：tree，以树状图列出文件目录结构</li><li>解压文件：<code>unzip -o x.zip -d ./x</code> # -o指不必先询问用户，unzip执行后覆盖原有文件。</li><li>软连接：<code>ln -s 源文件 目标文件</code>:<code>ln –s /var/www/test /var/test</code>； <ul><li>修改指向的新路径：<code>ln –snf /var/www/test1 /var/test</code></li><li>删除软连接：<code>unlink test</code>；其次用法：<code>rm test</code>；</li><li>不建议用法：<code>rm -rf test</code>：不推荐使用rm -rf，在使用rm -rf删除时，如果链接目标是目录时千万要小心，使用 rm -rf test/ 时你会发现，软连接并没有被删除，而源目录下的文件会被删除！</li></ul></li><li>C++编译器安装：<code>sudo apt-get install g++</code></li></ul><h2 id="tmux" tabindex="-1"><a class="header-anchor" href="#tmux"><span>tmux</span></a></h2><p>tmux是一个 terminal multiplexer（终端复用器），它可以启动一系列终端会话。</p><p>我们使用命令行时，打开一个终端窗口，,会话开始，执行某些命令如npm run dev，关闭此终端窗口，会话结束，npm run dev服务会话随之被关闭。有时我们希望我们运行的服务如npm run dev 或者一些cd命令等，被保留，而不是关闭窗口再打开后，重新手动执行。tmux的主要用途就在于此。</p><p>它解绑了会话和终端窗口。关闭终端窗口再打开，会话并不终止，而是继续运行在执行。将会话与终端窗后彻底分离。</p><ul><li>tmux安装：<code>sudo apt-get install tmux</code></li><li>左右分屏：<code>先ctrl+b 再shift+%</code></li><li>上下分屏：<code>先ctrl+b 再shift+分号键</code></li></ul>',7),c=[n];function d(r,a){return t(),i("div",null,c)}const p=e(o,[["render",d],["__file","linux.html.vue"]]),m=JSON.parse('{"path":"/zsk/tech/code/linux.html","title":"linux文件处理操作","lang":"zh-CN","frontmatter":{"date":"2024-04-16T00:00:00.000Z","title":"linux文件处理操作","author":"Genhiy","order":7,"category":["Coding"],"tag":["Linux"],"description":"基础linux文件处理操作 cd：change directory，改变工作目录：“..”代表当前目录的上一级目录，“.”则代表当前目录，“~”代表用户主目录。 相对目录与绝对目录：相对目录：在输入路径时，最前面的不是/或，表示相对当前目录所在的目录；绝对目录：在输入路径时，最前面的是/或。 pwd：print work directory，显示当前工...","head":[["meta",{"property":"og:url","content":"https://github.com/Genhiy/Genhiy.github.io/zsk/tech/code/linux.html"}],["meta",{"property":"og:site_name","content":"Genhiy"}],["meta",{"property":"og:title","content":"linux文件处理操作"}],["meta",{"property":"og:description","content":"基础linux文件处理操作 cd：change directory，改变工作目录：“..”代表当前目录的上一级目录，“.”则代表当前目录，“~”代表用户主目录。 相对目录与绝对目录：相对目录：在输入路径时，最前面的不是/或，表示相对当前目录所在的目录；绝对目录：在输入路径时，最前面的是/或。 pwd：print work directory，显示当前工..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Genhiy"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2024-04-16T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"linux文件处理操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-16T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Genhiy\\"}]}"]]},"headers":[{"level":2,"title":"基础linux文件处理操作","slug":"基础linux文件处理操作","link":"#基础linux文件处理操作","children":[]},{"level":2,"title":"tmux","slug":"tmux","link":"#tmux","children":[]}],"git":{},"readingTime":{"minutes":2.83,"words":849},"filePathRelative":"zsk/tech/code/linux.md","localizedDate":"2024年4月16日","excerpt":"<h2>基础linux文件处理操作</h2>\\n<ul>\\n<li>cd：change directory，改变工作目录：“..”代表当前目录的上一级目录，“.”则代表当前目录，“~”代表用户主目录。</li>\\n<li>相对目录与绝对目录：相对目录：在输入路径时，最前面的不是/或<sub>，表示相对当前目录所在的目录；绝对目录：在输入路径时，最前面的是/或</sub>。</li>\\n<li>pwd：print work directory，显示当前工作目录的绝对路径</li>\\n<li>mkdir：make directory，<code>mkdir test</code>：创建新的文件夹test</li>\\n<li>ls：list，列出目录的全部内容：ls -a\\t显示当前目录中所有文件，包含隐藏文件；ls -l\\t以列表方式显示文件的详细信息；ls -h\\t配合ls以人性化的方式显示文件大小。\\n<ul>\\n<li>ls通配符：*代表任意个数字符，？代表任意一个字符，[]匹配字符组中的任意一个，[a,b,c]匹配abc中的任意一个，[a-f]匹配a-f范围内任意一个。</li>\\n<li>ls通配符使用：<code>ls 1*a?.txt</code>：意思是会匹配出如123af.txt和1ad.txt之类的文件。</li>\\n</ul>\\n</li>\\n<li>touch：如果文件不存在，则创建新的文件；如果文件存在，则修改文件的修改日期</li>\\n<li>mv：move，移动文件，也可给文件或目录重命名：<code>mv test_file ../test</code>，也可以重命名：<code>mv 1.py 2.py</code>。</li>\\n<li>cp：copy，复制文件：移动文件到链接下：<code>cp file.txt /path/to/destination/</code>；\\n<ul>\\n<li>移动文件到链接下并重命名：<code>cp file.txt /path/to/destination/file2.txt</code>；</li>\\n<li>不复制文件，只生成链接文件：<code>cp -i file.txt /path/to/destination/</code></li>\\n</ul>\\n</li>\\n<li>rm：remove，删除文件或文件夹，不能恢复。-f：强制删除，忽略不存在的文件，-r：递归地删除目录下的内容，删除文件夹时必须加此参数</li>\\n<li>sudo：substitute user do用于提升用户权限，以管理员方式运行</li>\\n<li>tree：tree，以树状图列出文件目录结构</li>\\n<li>解压文件：<code>unzip -o x.zip -d ./x</code> # -o指不必先询问用户，unzip执行后覆盖原有文件。</li>\\n<li>软连接：<code>ln -s 源文件 目标文件</code>:<code>ln –s  /var/www/test   /var/test</code>；\\n<ul>\\n<li>修改指向的新路径：<code>ln –snf  /var/www/test1   /var/test</code></li>\\n<li>删除软连接：<code>unlink test</code>；其次用法：<code>rm test</code>；</li>\\n<li>不建议用法：<code>rm -rf test</code>：不推荐使用rm -rf，在使用rm -rf删除时，如果链接目标是目录时千万要小心，使用  rm -rf test/ 时你会发现，软连接并没有被删除，而源目录下的文件会被删除！</li>\\n</ul>\\n</li>\\n<li>C++编译器安装：<code>sudo apt-get install g++</code></li>\\n</ul>","autoDesc":true}');export{p as comp,m as data};
