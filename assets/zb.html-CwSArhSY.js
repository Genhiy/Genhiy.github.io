import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as l,c as o,a as n,d as s,b as i,e as a}from"./app-SD3SAAIy.js";const c="/assets/images/ks/Snipaste_2024-06-13_13-27-34.png",u="/assets/images/ks/Snipaste_2024-06-13_13-28-17.png",r="/assets/images/ks/Snipaste_2024-06-13_14-51-27.png",k="/assets/images/ks/Snipaste_2024-06-13_14-57-14.png",d={},m=a('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>理清单列链路各环节的排序目标及排序因子，便于后期查看主播在各环节漏斗的主要卡点及折损情况，针对主要的影响环节找到核心影响的排序因子做合理调整。</p><ul><li>召回：有哪些主要召回，分别是什么逻辑，目标是什么</li><li>粗排：有哪些通道，分用户群体的通道的排序逻辑，排序因子的组成，以及各排序因子由哪些模型产出</li><li>精排：有哪些队列，分用户群体的排序公式，排序因子的组成，以及各排序因子由哪些模型产出</li><li>混排：leaf返回给混排哪些东西，混排的排序逻辑</li></ul><h2 id="召回" tabindex="-1"><a class="header-anchor" href="#召回"><span>召回</span></a></h2><h3 id="双塔knn" tabindex="-1"><a class="header-anchor" href="#双塔knn"><span>双塔knn</span></a></h3><p>召回环节利用GPU的强大算力，实时计算User和500w+广告创意的相关性，返回top 2w结果。</p><ul><li>高效推理：基于双塔模型，item塔embedding缓存在GPU上，user embedding实时计算，利用定制化的tensorRT插件、半精度推理、缓存等方式，支持500w+物料的实时计算。</li><li>业务逻辑灵活表达：全量计算+topk逻辑，基于TF graph，支持灵活表达业务逻辑，支持ECPM等复杂的逻辑。</li></ul><p>更多信息：</p><ul><li>数据源：单列数据 bigriver 1小时数据流</li><li>实现：用户各行为序列+ 主播后验统计指标</li><li>目标：(时长label &gt; 20s ， ltr(各种行为加权) label)</li></ul><p>infer：</p><ul><li>user embedding：实时infer</li><li>item embedding：搭建knn召回（KNN(GPU)：使用快手 AIPlatform 提供的 GPU 全库向量检索算法，适用百万量级以及多目标的场景）</li><li>item embedding通过直播实时索引（realtime_index_btqueue_name=&quot;reco_index_builder_kuiba_live&quot; ）获取全量开播直播计算embedding发送到knn（最多30w item），实时infer user emb之后到knn中通过 label predict权重融合（0.3，1）取top 1000主播返回。</li></ul><h3 id="mind召回" tabindex="-1"><a class="header-anchor" href="#mind召回"><span>mind召回</span></a></h3><p>MIND：Multi-Interest Network with Dynamic Routing（基于动态路由的用户多向量召回）</p><ul><li>数据源：单列数据 bigriver 1小时数据流</li><li>实现：用户行为序列兴趣抽取</li><li>目标（时长label &gt; 10s）</li><li>batch内负采样</li></ul>',14),g={href:"https://www.jianshu.com/p/88e5f4fc3fd7",target:"_blank",rel:"noopener noreferrer"},_=a('<figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="fm" tabindex="-1"><a class="header-anchor" href="#fm"><span>FM</span></a></h3><ul><li>数据源：全站数据 （埋点解析）</li><li>实现：UA FM</li><li>目标（时长label &gt; 20s）</li><li>全局随机负采样</li></ul><figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="规则类召回" tabindex="-1"><a class="header-anchor" href="#规则类召回"><span>规则类召回</span></a></h3><ul><li>近期关注主播召回</li><li>近期高涨粉主播召回</li><li>重定向召回（28天内观看时长大于10min，且最近无连续短播放）</li><li>enable_realtime_great_moment_retr 实时高光时刻召回</li><li>打赏重定向召回（180天内有过打赏的主播，时间衰减，top200）</li></ul><h2 id="粗排" tabindex="-1"><a class="header-anchor" href="#粗排"><span>粗排</span></a></h2><h3 id="优化目标" tabindex="-1"><a class="header-anchor" href="#优化目标"><span>优化目标</span></a></h3><p>整体是mmoe结构，当前的目标6个：</p><ul><li>ctr: 点击，</li><li>Ivtr: 观看时长大于60s，</li><li>wtr: 关注，</li><li>intr: like+follow+comment+gift,</li><li>gtr: 打赏</li><li>htr: hate</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>task_mask <span class="token operator">=</span> single_side
    target_labels <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token punctuation">(</span><span class="token string">&#39;ctr&#39;</span><span class="token punctuation">,</span> ctr<span class="token punctuation">,</span> click<span class="token punctuation">,</span> task_mask <span class="token operator">*</span> click_view_samples<span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token string">&#39;lvtr&#39;</span><span class="token punctuation">,</span> lvtr<span class="token punctuation">,</span> long_view<span class="token punctuation">,</span> task_mask <span class="token operator">*</span> long_view_samples<span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token string">&#39;wtr&#39;</span><span class="token punctuation">,</span> wtr<span class="token punctuation">,</span> follow<span class="token punctuation">,</span> task_mask <span class="token operator">*</span> exp_follow <span class="token operator">*</span> follow_view_samples<span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token string">&#39;intr&#39;</span><span class="token punctuation">,</span> intr<span class="token punctuation">,</span> interact<span class="token punctuation">,</span> task_mask <span class="token operator">*</span> intr_view_samples<span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token string">&#39;htr&#39;</span><span class="token punctuation">,</span> htr<span class="token punctuation">,</span> hate<span class="token punctuation">,</span> task_mask <span class="token operator">*</span> hate_view_samples<span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token string">&#39;gtr&#39;</span><span class="token punctuation">,</span> gtr<span class="token punctuation">,</span> gift <span class="token punctuation">,</span> gift_view_samples <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token string">&#39;rstr_gamora&#39;</span><span class="token punctuation">,</span> rstr_gamora<span class="token punctuation">,</span> rs_label<span class="token punctuation">,</span> jingxuan <span class="token operator">*</span> rs_view_samples<span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token string">&#39;rstr_nebula&#39;</span><span class="token punctuation">,</span> rstr_nebula<span class="token punctuation">,</span> rs_label<span class="token punctuation">,</span> nebula_hot <span class="token operator">*</span> rs_view_samples<span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token string">&#39;rstr&#39;</span><span class="token punctuation">,</span> rstr<span class="token punctuation">,</span> rs_label<span class="token punctuation">,</span> task_mask <span class="token operator">*</span> rs_view_samples<span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token string">&#39;report_tr&#39;</span><span class="token punctuation">,</span> report_tr<span class="token punctuation">,</span> report<span class="token punctuation">,</span> task_mask <span class="token operator">*</span> report_view_samples<span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特征" tabindex="-1"><a class="header-anchor" href="#特征"><span>特征</span></a></h3><ul><li>常规特征、行为序列特征 <ul><li>uid、user_attr、user_emp_xtr、user_action_list、user_action_list_in_unit</li></ul></li><li>unit特征 <ul><li>click、entry、leave、effectView</li><li>10s、30s的切片内进间人数、10s播放人数，用了前4个切片，并计算相邻切片的diff表示随时间的变化趋势</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>unit_emp_xtr <span class="token operator">=</span> <span class="token punctuation">[</span>
                      tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>config<span class="token punctuation">.</span>get_dense_fea<span class="token punctuation">(</span><span class="token string">&#39;UnitRawClickRate1&#39;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">,</span> 
                      tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>config<span class="token punctuation">.</span>get_dense_fea<span class="token punctuation">(</span><span class="token string">&#39;UnitRawEffectViewRate1&#39;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">,</span> 
                      tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>config<span class="token punctuation">.</span>get_dense_fea<span class="token punctuation">(</span><span class="token string">&#39;UnitRawEntryRate1&#39;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
                    <span class="token punctuation">]</span>

log_click_cnt_emb <span class="token operator">=</span> config<span class="token punctuation">.</span>new_embedding<span class="token punctuation">(</span><span class="token string">&quot;UnitLogClickCounter1&quot;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> slots<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
log_click_rate_emb <span class="token operator">=</span> config<span class="token punctuation">.</span>new_embedding<span class="token punctuation">(</span><span class="token string">&quot;UnitLogClickRate1&quot;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> slots<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">501</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
log_entry_cnt_emb <span class="token operator">=</span> config<span class="token punctuation">.</span>new_embedding<span class="token punctuation">(</span><span class="token string">&quot;UnitLogEntryCounter1&quot;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> slots<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">502</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
log_entry_rate_emb <span class="token operator">=</span> config<span class="token punctuation">.</span>new_embedding<span class="token punctuation">(</span><span class="token string">&quot;UnitLogEntryRate1&quot;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> slots<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">503</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
log_leave_cnt_emb <span class="token operator">=</span> config<span class="token punctuation">.</span>new_embedding<span class="token punctuation">(</span><span class="token string">&quot;UnitLogLeaveCounter1&quot;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> slots<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">504</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
log_effectview_cnt_emb <span class="token operator">=</span> config<span class="token punctuation">.</span>new_embedding<span class="token punctuation">(</span><span class="token string">&quot;UnitLogEffectViewCounter1&quot;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> slots<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">506</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
log_effectview_rate_emb <span class="token operator">=</span> config<span class="token punctuation">.</span>new_embedding<span class="token punctuation">(</span><span class="token string">&quot;UnitLogEffectViewRate1&quot;</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> slots<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">507</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>rfm特征：用户统计特征、用户作者交叉特征</li><li>短视频序列特征： <ul><li>用户最近消费的50个短视频，包括作者ID、视频完播率、消费的页面场景信息、最后一次观看到现在的时间间隔、消费中的行为label这五个特征，通过一个独立的attention层引入到模型中。</li></ul></li><li>reason list特征 <ul><li>pReason、把pReason扩充成reason list，用于建模召回阶段对该资源的认可度。</li></ul></li><li>author_mmu_tag、k7 embedding</li><li>用户打赏列表transformer</li></ul><h3 id="负采样优化" tabindex="-1"><a class="header-anchor" href="#负采样优化"><span>负采样优化</span></a></h3><p>样本空间不一致：采用 in-batch 负采样对CTR目标进行优化。</p><p>in-batch负采样 + point-wise方案</p><ol><li>因为CTR目标已经有大量被精排排出来的hard负样本，针对负样本没必要再去采样负样本。所以只针对CTR的正样本，在batch内采样构成其负样本。</li><li>如果直接用softmax多分类的方式进行计算，由于in-batch采样的样本相当于从大盘随机采的，属于easy样本，在进行多分类计算的时候，正样本的预估概率会出现比负样本高很多的情况，导致模型不太容易学到有效信息。且粗排大部分目标都是以2分类概率分进行目标融合排序，为了方便最后的目标融合，所以训练的时候，是将in-batch采样的负样本作为样本补充的方式，用point-wise的方式进行训练。</li></ol><h2 id="精排" tabindex="-1"><a class="header-anchor" href="#精排"><span>精排</span></a></h2><h2 id="混排" tabindex="-1"><a class="header-anchor" href="#混排"><span>混排</span></a></h2><figure><img src="`+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="阶段一-直播分-→-混排报价分逻辑" tabindex="-1"><a class="header-anchor" href="#阶段一-直播分-→-混排报价分逻辑"><span>阶段一：直播分 → 混排报价分逻辑</span></a></h3><ol><li><p>计算流控分 dc_score：精排分（根据排序公式计算）</p></li><li><p>映射流控组 mi_bucket：根据不同stid、不同流控单元，实时runner统计dc_score，并进行分位点计算，分成100个桶，标号mi_bucket</p><ul><li>流控单元 dc_group形式：prefix+suffix+queueName+value <ul><li>例子：pb_gamora+sb_gamora_cstart_gift_score_v1 前缀base+后缀base流控单元、B端队列、gift校准文件</li></ul></li></ul></li><li><p>计算混排分 unify_gift：</p><ul><li>MTB 2.1 <ul><li>离线hive表统计，以流控单元进行group，然后统计每个流控单元内 mi_bucket的后验价值作为映射</li><li>根据当前dc_score映射的mi_bucket，读取校准文件，获得unify_gift</li></ul></li><li>MTB 2.2 <ul><li>直接报价 ctr * gvalue，不做校准</li></ul></li></ul></li></ol><h3 id="阶段二-混排拿到直播报价以后阶段" tabindex="-1"><a class="header-anchor" href="#阶段二-混排拿到直播报价以后阶段"><span>阶段二：混排拿到直播报价以后阶段</span></a></h3><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',26);function b(h,f){const t=e("ExternalLinkIcon");return l(),o("div",null,[m,n("blockquote",null,[n("p",null,[s("mind内容参见："),n("a",g,[s("https://www.jianshu.com/p/88e5f4fc3fd7"),i(t)])])]),_])}const x=p(d,[["render",b],["__file","zb.html.vue"]]),y=JSON.parse('{"path":"/rcmd/ks/zb.html","title":"直播单列链路各环节拆解","lang":"zh-CN","frontmatter":{"date":"2024-06-13T00:00:00.000Z","title":"直播单列链路各环节拆解","author":"Genhiy","order":1,"category":["推荐系统"],"tag":["无标签"],"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"召回","slug":"召回","link":"#召回","children":[{"level":3,"title":"双塔knn","slug":"双塔knn","link":"#双塔knn","children":[]},{"level":3,"title":"mind召回","slug":"mind召回","link":"#mind召回","children":[]},{"level":3,"title":"FM","slug":"fm","link":"#fm","children":[]},{"level":3,"title":"规则类召回","slug":"规则类召回","link":"#规则类召回","children":[]}]},{"level":2,"title":"粗排","slug":"粗排","link":"#粗排","children":[{"level":3,"title":"优化目标","slug":"优化目标","link":"#优化目标","children":[]},{"level":3,"title":"特征","slug":"特征","link":"#特征","children":[]},{"level":3,"title":"负采样优化","slug":"负采样优化","link":"#负采样优化","children":[]}]},{"level":2,"title":"精排","slug":"精排","link":"#精排","children":[]},{"level":2,"title":"混排","slug":"混排","link":"#混排","children":[{"level":3,"title":"阶段一：直播分 → 混排报价分逻辑","slug":"阶段一-直播分-→-混排报价分逻辑","link":"#阶段一-直播分-→-混排报价分逻辑","children":[]},{"level":3,"title":"阶段二：混排拿到直播报价以后阶段","slug":"阶段二-混排拿到直播报价以后阶段","link":"#阶段二-混排拿到直播报价以后阶段","children":[]}]}],"git":{},"readingTime":{"minutes":5.1,"words":1529},"filePathRelative":"rcmd/ks/zb.md","localizedDate":"2024年6月13日"}');export{x as comp,y as data};
