import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-SD3SAAIy.js";const p={},e=t(`<p>数据分析的价值主要在于熟悉了解整个数据集的基本情况包括每个文件里有哪些数据，具体的文件中的每个字段表示什么实际含义，以及数据集中特征之间的相关性，在推荐场景下主要就是分析用户本身的基本属性，文章基本属性，以及用户和文章交互的一些分布，这些都有利于后面的召回策略的选择，以及特征工程。</p><p><strong>建议：当特征工程和模型调参已经很难继续上分了，可以回来在重新从新的角度去分析这些数据，或许可以找到上分的灵感</strong></p><h2 id="导包" tabindex="-1"><a class="header-anchor" href="#导包"><span>导包</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 导入相关包</span>
<span class="token operator">%</span>matplotlib inline
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns
plt<span class="token punctuation">.</span>rc<span class="token punctuation">(</span><span class="token string">&#39;font&#39;</span><span class="token punctuation">,</span> family<span class="token operator">=</span><span class="token string">&#39;SimHei&#39;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> os<span class="token punctuation">,</span>gc<span class="token punctuation">,</span>re<span class="token punctuation">,</span>warnings<span class="token punctuation">,</span>sys
warnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">&quot;ignore&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取数据" tabindex="-1"><a class="header-anchor" href="#读取数据"><span>读取数据</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>path <span class="token operator">=</span> <span class="token string">&#39;./data_raw/&#39;</span>

<span class="token comment">#####train</span>
trn_click <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token operator">+</span><span class="token string">&#39;train_click_log.csv&#39;</span><span class="token punctuation">)</span>
item_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token operator">+</span><span class="token string">&#39;articles.csv&#39;</span><span class="token punctuation">)</span>
item_df <span class="token operator">=</span> item_df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">#重命名，方便后续match</span>
item_emb_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token operator">+</span><span class="token string">&#39;articles_emb.csv&#39;</span><span class="token punctuation">)</span>

<span class="token comment">#####test</span>
tst_click <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token operator">+</span><span class="token string">&#39;testA_click_log.csv&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据预处理" tabindex="-1"><a class="header-anchor" href="#数据预处理"><span>数据预处理</span></a></h2><p>计算用户点击rank和点击次数</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 对每个用户的点击时间戳进行排序</span>
trn_click<span class="token punctuation">[</span><span class="token string">&#39;rank&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> trn_click<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rank<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
tst_click<span class="token punctuation">[</span><span class="token string">&#39;rank&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> tst_click<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rank<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#计算用户点击文章的次数，并添加新的一列count</span>
trn_click<span class="token punctuation">[</span><span class="token string">&#39;click_cnts&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> trn_click<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>
tst_click<span class="token punctuation">[</span><span class="token string">&#39;click_cnts&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> tst_click<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据浏览" tabindex="-1"><a class="header-anchor" href="#数据浏览"><span>数据浏览</span></a></h2><h3 id="用户点击日志文件-训练集" tabindex="-1"><a class="header-anchor" href="#用户点击日志文件-训练集"><span>用户点击日志文件_训练集</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>trn_click <span class="token operator">=</span> trn_click<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>item_df<span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
trn_click<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119112706647.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>train_click_log.csv文件数据中每个字段的含义</strong></p><ol><li>user_id: 用户的唯一标识</li><li>click_article_id: 用户点击的文章唯一标识</li><li>click_timestamp: 用户点击文章时的时间戳</li><li>click_environment: 用户点击文章的环境</li><li>click_deviceGroup: 用户点击文章的设备组</li><li>click_os: 用户点击文章时的操作系统</li><li>click_country: 用户点击文章时的所在的国家</li><li>click_region: 用户点击文章时所在的区域</li><li>click_referrer_type: 用户点击文章时，文章的来源</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#用户点击日志信息</span>
trn_click<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119112622939.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>trn_click<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119112649376.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#训练集中的用户数量为20w</span>
trn_click<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>200000
</code></pre><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>trn_click<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 训练集里面每个用户至少点击了两篇文章</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre><code>2
</code></pre><p><strong>画直方图大体看一下基本的属性分布</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
i <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_environment&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_deviceGroup&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_os&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_country&#39;</span><span class="token punctuation">,</span> 
            <span class="token string">&#39;click_region&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_referrer_type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rank&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_cnts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    plot_envs <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>
    v <span class="token operator">=</span> trn_click<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span>
    fig <span class="token operator">=</span> sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>v<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> item <span class="token keyword">in</span> fig<span class="token punctuation">.</span>get_xticklabels<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        item<span class="token punctuation">.</span>set_rotation<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>col<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/20201118000820300.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>从点击时间clik_timestamp来看，分布较为平均，可不做特殊处理。由于时间戳是13位的，后续将时间格式转换成10位方便计算。</strong></p><p><strong>从点击环境click_environment来看，仅有1922次（占0.1%）点击环境为1；仅有24617次（占2.3%）点击环境为2；剩余（占97.6%）点击环境为4。</strong></p><p><strong>从点击设备组click_deviceGroup来看，设备1占大部分（60.4%），设备3占36%。</strong></p><h3 id="测试集用户点击日志" tabindex="-1"><a class="header-anchor" href="#测试集用户点击日志"><span>测试集用户点击日志</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>tst_click <span class="token operator">=</span> tst_click<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>item_df<span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
tst_click<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119112952261.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>tst_click<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113015529.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>我们可以看出训练集和测试集的用户是完全不一样的</strong></p><p><strong>训练集的用户ID由0 ~ 199999，而测试集A的用户ID由200000 ~ 249999。</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#测试集中的用户数量为5w</span>
tst_click<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>50000
</code></pre><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>tst_click<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 注意测试集里面有只点击过一次文章的用户</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre><code>1
</code></pre><h3 id="新闻文章信息数据表" tabindex="-1"><a class="header-anchor" href="#新闻文章信息数据表"><span>新闻文章信息数据表</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#新闻文章数据集浏览</span>
item_df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>item_df<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113118388.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>item_df<span class="token punctuation">[</span><span class="token string">&#39;words_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113147240.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>item_df<span class="token punctuation">[</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment"># 461个文章主题</span>
item_df<span class="token punctuation">[</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>hist<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>item_df<span class="token punctuation">.</span>shape       <span class="token comment"># 364047篇文章</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>(364047, 4)</p></blockquote><h3 id="新闻文章embedding向量表示" tabindex="-1"><a class="header-anchor" href="#新闻文章embedding向量表示"><span>新闻文章embedding向量表示</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>item_emb_df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113253455.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>item_emb_df<span class="token punctuation">.</span>shape
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre><code>(364047, 251)
</code></pre><h2 id="数据分析" tabindex="-1"><a class="header-anchor" href="#数据分析"><span>数据分析</span></a></h2><h3 id="用户重复点击" tabindex="-1"><a class="header-anchor" href="#用户重复点击"><span>用户重复点击</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#####merge</span>
user_click_merge <span class="token operator">=</span> trn_click<span class="token punctuation">.</span>append<span class="token punctuation">(</span>tst_click<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#用户重复点击</span>
user_click_count <span class="token operator">=</span> user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
user_click_count<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113334727.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_click_count<span class="token punctuation">[</span>user_click_count<span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">7</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113351807.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_click_count<span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113429769.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#用户点击新闻次数</span>
user_click_count<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113414785.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>可以看出：有1605541（约占99.2%）的用户未重复阅读过文章，仅有极少数用户重复点击过某篇文章。 这个也可以单独制作成特征</strong></p><h3 id="用户点击环境变化分析" tabindex="-1"><a class="header-anchor" href="#用户点击环境变化分析"><span>用户点击环境变化分析</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">plot_envs</span><span class="token punctuation">(</span>df<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> r<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>
    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    i <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">for</span> col <span class="token keyword">in</span> cols<span class="token punctuation">:</span>
        plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>r<span class="token punctuation">,</span> c<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
        i <span class="token operator">+=</span> <span class="token number">1</span>
        v <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
        fig <span class="token operator">=</span> sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>v<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> item <span class="token keyword">in</span> fig<span class="token punctuation">.</span>get_xticklabels<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            item<span class="token punctuation">.</span>set_rotation<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>
        plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>col<span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 分析用户点击环境变化是否明显，这里随机采样10个用户分析这些用户的点击环境分布</span>
sample_user_ids <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>tst_click<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> replace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
sample_users <span class="token operator">=</span> user_click_merge<span class="token punctuation">[</span>user_click_merge<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>sample_user_ids<span class="token punctuation">)</span><span class="token punctuation">]</span>
cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;click_environment&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;click_deviceGroup&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_os&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_country&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_region&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;click_referrer_type&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> _<span class="token punctuation">,</span> user_df <span class="token keyword">in</span> sample_users<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    plot_envs<span class="token punctuation">(</span>user_df<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113624424.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113637746.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113652132.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113702034.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113714135.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>可以看出绝大多数数的用户的点击环境是比较固定的。思路：可以基于这些环境的统计特征来代表该用户本身的属性</strong></p><h3 id="用户点击新闻数量的分布" tabindex="-1"><a class="header-anchor" href="#用户点击新闻数量的分布"><span>用户点击新闻数量的分布</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_click_item_count <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>user_click_item_count<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113759490.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>可以根据用户的点击文章次数看出用户的活跃度</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#点击次数在前50的用户</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>user_click_item_count<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113825586.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>点击次数排前50的用户的点击次数都在100次以上。思路：我们可以定义点击次数大于等于100次的用户为活跃用户，这是一种简单的处理思路， 判断用户活跃度，更加全面的是再结合上点击时间，后面我们会基于点击次数和点击时间两个方面来判断用户活跃度。</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#点击次数排名在[25000:50000]之间</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>user_click_item_count<span class="token punctuation">[</span><span class="token number">25000</span><span class="token punctuation">:</span><span class="token number">50000</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113844946.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>可以看出点击次数小于等于两次的用户非常的多，这些用户可以认为是非活跃用户</strong></p><h3 id="新闻点击次数分析" tabindex="-1"><a class="header-anchor" href="#新闻点击次数分析"><span>新闻点击次数分析</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>item_click_count <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>item_click_count<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113912912.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>item_click_count<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113930745.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>可以看出点击次数最多的前100篇新闻，点击次数大于1000次</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>item_click_count<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119113958254.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>点击次数最多的前20篇新闻，点击次数大于2500。思路：可以定义这些新闻为热门新闻， 这个也是简单的处理方式，后面我们也是根据点击次数和时间进行文章热度的一个划分。</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>item_click_count<span class="token punctuation">[</span><span class="token number">3500</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114017762.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>可以发现很多新闻只被点击过一两次。思路：可以定义这些新闻是冷门新闻。</strong></p><h3 id="新闻共现频次-两篇新闻连续出现的次数" tabindex="-1"><a class="header-anchor" href="#新闻共现频次-两篇新闻连续出现的次数"><span>新闻共现频次：两篇新闻连续出现的次数</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>tmp <span class="token operator">=</span> user_click_merge<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">)</span>
tmp<span class="token punctuation">[</span><span class="token string">&#39;next_item&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
union_item <span class="token operator">=</span> tmp<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;next_item&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
union_item<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114044351.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>由统计数据可以看出，平均共现次数2.88，最高为1687。</strong></p><p><strong>说明用户看的新闻，相关性是比较强的。</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#画个图直观地看一看</span>
x <span class="token operator">=</span> union_item<span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> union_item<span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span>
plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114106223.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>union_item<span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token number">40000</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114122557.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>大概有70000个pair至少共现一次。</strong></p><h3 id="新闻文章信息" tabindex="-1"><a class="header-anchor" href="#新闻文章信息"><span>新闻文章信息</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#不同类型的新闻出现的次数</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>user_click_merge<span class="token punctuation">[</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114144058.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#出现次数比较少的新闻类型, 有些新闻类型，基本上就出现过几次</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>user_click_merge<span class="token punctuation">[</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114201764.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>user_click_merge<span class="token punctuation">[</span><span class="token string">&#39;words_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114241194.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="用户点击的新闻类型的偏好" tabindex="-1"><a class="header-anchor" href="#用户点击的新闻类型的偏好"><span>用户点击的新闻类型的偏好</span></a></h3><p>此特征可以用于度量用户的兴趣是否广泛。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114300286.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>从上图中可以看出有一小部分用户阅读类型是极其广泛的，大部分人都处在20个新闻类型以下。</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114318523.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="用户查看文章的长度的分布" tabindex="-1"><a class="header-anchor" href="#用户查看文章的长度的分布"><span>用户查看文章的长度的分布</span></a></h3><p>通过统计不同用户点击新闻的平均字数，这个可以反映用户是对长文更感兴趣还是对短文更感兴趣。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;words_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114337448.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>从上图中可以发现有一小部分人看的文章平均词数非常高，也有一小部分人看的平均文章次数非常低。</strong></p><p><strong>大多数人偏好于阅读字数在200-400字之间的新闻。</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#挑出大多数人的区间仔细看看</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;words_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">:</span><span class="token number">45000</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114355195.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>可以发现大多数人都是看250字以下的文章</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#更加详细的参数</span>
user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;words_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114418911.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="用户点击新闻的时间分析" tabindex="-1"><a class="header-anchor" href="#用户点击新闻的时间分析"><span>用户点击新闻的时间分析</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#为了更好的可视化，这里把时间进行归一化操作</span>
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> MinMaxScaler
mm <span class="token operator">=</span> MinMaxScaler<span class="token punctuation">(</span><span class="token punctuation">)</span>
user_click_merge<span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> mm<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>user_click_merge<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
user_click_merge<span class="token punctuation">[</span><span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> mm<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>user_click_merge<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

user_click_merge <span class="token operator">=</span> user_click_merge<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_click_merge<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114447904.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">mean_diff_time_func</span><span class="token punctuation">(</span>df<span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">:</span>
    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>df<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">{</span>col<span class="token punctuation">}</span><span class="token punctuation">)</span>
    df<span class="token punctuation">[</span><span class="token string">&#39;time_shift1&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    df<span class="token punctuation">[</span><span class="token string">&#39;diff_time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">&#39;time_shift1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> df<span class="token punctuation">[</span><span class="token string">&#39;diff_time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 点击时间差的平均值</span>
mean_diff_click_time <span class="token operator">=</span> user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> mean_diff_time_func<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>mean_diff_click_time<span class="token punctuation">.</span>values<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119114505086.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>从上图可以发现不同用户点击文章的时间差是有差异的。</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 前后点击文章的创建时间差的平均值</span>
mean_diff_created_time <span class="token operator">=</span> user_click_merge<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> mean_diff_time_func<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>mean_diff_created_time<span class="token punctuation">.</span>values<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119122227666.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>从图中可以发现用户先后点击文章，文章的创建时间也是有差异的</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 用户前后点击文章的相似性分布</span>
item_idx_2_rawid_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>item_emb_df<span class="token punctuation">[</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item_emb_df<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">del</span> item_emb_df<span class="token punctuation">[</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>item_emb_np <span class="token operator">=</span> np<span class="token punctuation">.</span>ascontiguousarray<span class="token punctuation">(</span>item_emb_df<span class="token punctuation">.</span>values<span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 随机选择5个用户，查看这些用户前后查看文章的相似性</span>
sub_user_ids <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_click_merge<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span> replace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
sub_user_info <span class="token operator">=</span> user_click_merge<span class="token punctuation">[</span>user_click_merge<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>sub_user_ids<span class="token punctuation">)</span><span class="token punctuation">]</span>

sub_user_info<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119122251274.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_item_sim_list</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sim_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    item_list <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>item_list<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        emb1 <span class="token operator">=</span> item_emb_np<span class="token punctuation">[</span>item_idx_2_rawid_dict<span class="token punctuation">[</span>item_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
        emb2 <span class="token operator">=</span> item_emb_np<span class="token punctuation">[</span>item_idx_2_rawid_dict<span class="token punctuation">[</span>item_list<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
        sim_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>emb1<span class="token punctuation">,</span>emb2<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>emb1<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>emb2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    sim_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> sim_list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">for</span> _<span class="token punctuation">,</span> user_df <span class="token keyword">in</span> sub_user_info<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    item_sim_list <span class="token operator">=</span> get_item_sim_list<span class="token punctuation">(</span>user_df<span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>item_sim_list<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/abc/image-20201119122310969.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>从图中可以看出有些用户前后看的商品的相似度波动比较大，有些波动比较小，也是有一定的区分度的。</strong></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过数据分析的过程， 我们目前可以得到以下几点重要的信息， 这个对于我们进行后面的特征制作和分析非常有帮助：</p><ol><li>训练集和测试集的用户id没有重复，也就是测试集里面的用户没有模型是没有见过的</li><li>训练集中用户最少的点击文章数是2， 而测试集里面用户最少的点击文章数是1</li><li>用户对于文章存在重复点击的情况， 但这个都存在于训练集里面</li><li>同一用户的点击环境存在不唯一的情况，后面做这部分特征的时候可以采用统计特征</li><li>用户点击文章的次数有很大的区分度，后面可以根据这个制作衡量用户活跃度的特征</li><li>文章被用户点击的次数也有很大的区分度，后面可以根据这个制作衡量文章热度的特征</li><li>用户看的新闻，相关性是比较强的，所以往往我们判断用户是否对某篇文章感兴趣的时候， 在很大程度上会和他历史点击过的文章有关</li><li>用户点击的文章字数有比较大的区别， 这个可以反映用户对于文章字数的区别</li><li>用户点击过的文章主题也有很大的区别， 这个可以反映用户的主题偏好</li><li>不同用户点击文章的时间差也会有所区别， 这个可以反映用户对于文章时效性的偏好</li></ol><p>所以根据上面的一些分析，可以更好的帮助我们后面做好特征工程， 充分挖掘数据的隐含信息。</p>`,159),c=[e];function o(i,l){return s(),a("div",null,c)}const d=n(p,[["render",o],["__file","ch4.1.2_da.html.vue"]]),k=JSON.parse('{"path":"/rcmd/ch04/ch4.1/ch4.1.2_da.html","title":"数据分析","lang":"zh-CN","frontmatter":{"date":"2024-07-06T00:00:00.000Z","title":"数据分析","author":"Genhiy","order":2,"category":["推荐系统"],"tag":["无标签"],"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"导包","slug":"导包","link":"#导包","children":[]},{"level":2,"title":"读取数据","slug":"读取数据","link":"#读取数据","children":[]},{"level":2,"title":"数据预处理","slug":"数据预处理","link":"#数据预处理","children":[]},{"level":2,"title":"数据浏览","slug":"数据浏览","link":"#数据浏览","children":[{"level":3,"title":"用户点击日志文件_训练集","slug":"用户点击日志文件-训练集","link":"#用户点击日志文件-训练集","children":[]},{"level":3,"title":"测试集用户点击日志","slug":"测试集用户点击日志","link":"#测试集用户点击日志","children":[]},{"level":3,"title":"新闻文章信息数据表","slug":"新闻文章信息数据表","link":"#新闻文章信息数据表","children":[]},{"level":3,"title":"新闻文章embedding向量表示","slug":"新闻文章embedding向量表示","link":"#新闻文章embedding向量表示","children":[]}]},{"level":2,"title":"数据分析","slug":"数据分析","link":"#数据分析","children":[{"level":3,"title":"用户重复点击","slug":"用户重复点击","link":"#用户重复点击","children":[]},{"level":3,"title":"用户点击环境变化分析","slug":"用户点击环境变化分析","link":"#用户点击环境变化分析","children":[]},{"level":3,"title":"用户点击新闻数量的分布","slug":"用户点击新闻数量的分布","link":"#用户点击新闻数量的分布","children":[]},{"level":3,"title":"新闻点击次数分析","slug":"新闻点击次数分析","link":"#新闻点击次数分析","children":[]},{"level":3,"title":"新闻共现频次：两篇新闻连续出现的次数","slug":"新闻共现频次-两篇新闻连续出现的次数","link":"#新闻共现频次-两篇新闻连续出现的次数","children":[]},{"level":3,"title":"新闻文章信息","slug":"新闻文章信息","link":"#新闻文章信息","children":[]},{"level":3,"title":"用户点击的新闻类型的偏好","slug":"用户点击的新闻类型的偏好","link":"#用户点击的新闻类型的偏好","children":[]},{"level":3,"title":"用户查看文章的长度的分布","slug":"用户查看文章的长度的分布","link":"#用户查看文章的长度的分布","children":[]},{"level":3,"title":"用户点击新闻的时间分析","slug":"用户点击新闻的时间分析","link":"#用户点击新闻的时间分析","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":10.16,"words":3048},"filePathRelative":"rcmd/ch04/ch4.1/ch4.1.2_da.md","localizedDate":"2024年7月6日"}');export{d as comp,k as data};
