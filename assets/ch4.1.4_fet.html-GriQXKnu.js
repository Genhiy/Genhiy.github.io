import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,a as n,d as a,b as t,e as p}from"./app-SD3SAAIy.js";const i={},u=p(`<h1 id="特征工程-制作特征和标签-转成监督学习问题" tabindex="-1"><a class="header-anchor" href="#特征工程-制作特征和标签-转成监督学习问题"><span>特征工程(制作特征和标签， 转成监督学习问题)</span></a></h1><p>我们先捋一下基于原始的给定数据， 有哪些特征可以直接利用：</p><ol><li>文章的自身特征， category_id表示这文章的类型， created_at_ts表示文章建立的时间， 这个关系着文章的时效性， words_count是文章的字数， 一般字数太长我们不太喜欢点击, 也不排除有人就喜欢读长文。</li><li>文章的内容embedding特征， 这个召回的时候用过， 这里可以选择使用， 也可以选择不用， 也可以尝试其他类型的embedding特征， 比如W2V等</li><li>用户的设备特征信息</li></ol><p>上面这些直接可以用的特征， 待做完特征工程之后， 直接就可以根据article_id或者是user_id把这些特征加入进去。 但是我们需要先基于召回的结果， 构造一些特征，然后制作标签，形成一个监督学习的数据集。<br><br> 构造监督数据集的思路， 根据召回结果， 我们会得到一个{user_id: [可能点击的文章列表]}形式的字典。 那么我们就可以对于每个用户， 每篇可能点击的文章构造一个监督测试集， 比如对于用户user1， 假设得到的他的召回列表{user1: [item1, item2, item3]}， 我们就可以得到三行数据(user1, item1), (user1, item2), (user1, item3)的形式， 这就是监督测试集时候的前两列特征。<br><br></p><p>构造特征的思路是这样， 我们知道每个用户的点击文章是与其历史点击的文章信息是有很大关联的， 比如同一个主题， 相似等等。 所以特征构造这块很重要的一系列特征<strong>是要结合用户的历史点击文章信息</strong>。我们已经得到了每个用户及点击候选文章的两列的一个数据集， 而我们的目的是要预测最后一次点击的文章， 比较自然的一个思路就是和其最后几次点击的文章产生关系， 这样既考虑了其历史点击文章信息， 又得离最后一次点击较近，因为新闻很大的一个特点就是注重时效性。 往往用户的最后一次点击会和其最后几次点击有很大的关联。 所以我们就可以对于每个候选文章， 做出与最后几次点击相关的特征如下：</p><ol><li>候选item与最后几次点击的相似性特征(embedding内积） --- 这个直接关联用户历史行为</li><li>候选item与最后几次点击的相似性特征的统计特征 --- 统计特征可以减少一些波动和异常</li><li>候选item与最后几次点击文章的字数差的特征 --- 可以通过字数看用户偏好</li><li>候选item与最后几次点击的文章建立的时间差特征 --- 时间差特征可以看出该用户对于文章的实时性的偏好</li></ol><p>还需要考虑一下 <strong>5. 如果使用了youtube召回的话， 我们还可以制作用户与候选item的相似特征</strong></p><p>当然， 上面只是提供了一种基于用户历史行为做特征工程的思路， 大家也可以思维风暴一下，尝试一些其他的特征。 下面我们就实现上面的这些特征的制作， 下面的逻辑是这样：</p><ol><li>我们首先获得用户的最后一次点击操作和用户的历史点击， 这个基于我们的日志数据集做</li><li>基于用户的历史行为制作特征， 这个会用到用户的历史点击表， 最后的召回列表， 文章的信息表和embedding向量</li><li>制作标签， 形成最后的监督学习数据集</li></ol><h2 id="导包" tabindex="-1"><a class="header-anchor" href="#导包"><span>导包</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> pickle
<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm
<span class="token keyword">import</span> gc<span class="token punctuation">,</span> os
<span class="token keyword">import</span> logging
<span class="token keyword">import</span> time
<span class="token keyword">import</span> lightgbm <span class="token keyword">as</span> lgb
<span class="token keyword">from</span> gensim<span class="token punctuation">.</span>models <span class="token keyword">import</span> Word2Vec
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> MinMaxScaler
<span class="token keyword">import</span> warnings
warnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="df节省内存函数" tabindex="-1"><a class="header-anchor" href="#df节省内存函数"><span>df节省内存函数</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 节省内存的一个函数</span>
<span class="token comment"># 减少内存</span>
<span class="token keyword">def</span> <span class="token function">reduce_mem</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">:</span>
    starttime <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    numerics <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;int16&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;int32&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;int64&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;float16&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;float32&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;float64&#39;</span><span class="token punctuation">]</span>
    start_mem <span class="token operator">=</span> df<span class="token punctuation">.</span>memory_usage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token operator">**</span><span class="token number">2</span>
    <span class="token keyword">for</span> col <span class="token keyword">in</span> df<span class="token punctuation">.</span>columns<span class="token punctuation">:</span>
        col_type <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>dtypes
        <span class="token keyword">if</span> col_type <span class="token keyword">in</span> numerics<span class="token punctuation">:</span>
            c_min <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            c_max <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>c_min<span class="token punctuation">)</span> <span class="token keyword">or</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>c_max<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">continue</span>
            <span class="token keyword">if</span> <span class="token builtin">str</span><span class="token punctuation">(</span>col_type<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;int&#39;</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> c_min <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>iinfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int8<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span> <span class="token keyword">and</span> c_max <span class="token operator">&lt;</span> np<span class="token punctuation">.</span>iinfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int8<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">:</span>
                    df<span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int8<span class="token punctuation">)</span>
                <span class="token keyword">elif</span> c_min <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>iinfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span> <span class="token keyword">and</span> c_max <span class="token operator">&lt;</span> np<span class="token punctuation">.</span>iinfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">:</span>
                    df<span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span>
                <span class="token keyword">elif</span> c_min <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>iinfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span> <span class="token keyword">and</span> c_max <span class="token operator">&lt;</span> np<span class="token punctuation">.</span>iinfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">:</span>
                    df<span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>
                <span class="token keyword">elif</span> c_min <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>iinfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int64<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span> <span class="token keyword">and</span> c_max <span class="token operator">&lt;</span> np<span class="token punctuation">.</span>iinfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int64<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">:</span>
                    df<span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int64<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> c_min <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>finfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float16<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span> <span class="token keyword">and</span> c_max <span class="token operator">&lt;</span> np<span class="token punctuation">.</span>finfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float16<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">:</span>
                    df<span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float16<span class="token punctuation">)</span>
                <span class="token keyword">elif</span> c_min <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>finfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span> <span class="token keyword">and</span> c_max <span class="token operator">&lt;</span> np<span class="token punctuation">.</span>finfo<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">:</span>
                    df<span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    df<span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float64<span class="token punctuation">)</span>
    end_mem <span class="token operator">=</span> df<span class="token punctuation">.</span>memory_usage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token operator">**</span><span class="token number">2</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-- Mem. usage decreased to {:5.2f} Mb ({:.1f}% reduction),time spend:{:2.2f} min&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end_mem<span class="token punctuation">,</span>
                                                                                                           <span class="token number">100</span><span class="token operator">*</span><span class="token punctuation">(</span>start_mem<span class="token operator">-</span>end_mem<span class="token punctuation">)</span><span class="token operator">/</span>start_mem<span class="token punctuation">,</span>
                                                                                                           <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>starttime<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> df
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定义数据路径" tabindex="-1"><a class="header-anchor" href="#定义数据路径"><span>定义数据路径</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>data_path <span class="token operator">=</span> <span class="token string">&#39;./data_raw/&#39;</span>
save_path <span class="token operator">=</span> <span class="token string">&#39;./temp_results/&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据读取" tabindex="-1"><a class="header-anchor" href="#数据读取"><span>数据读取</span></a></h2><h3 id="训练和验证集的划分" tabindex="-1"><a class="header-anchor" href="#训练和验证集的划分"><span>训练和验证集的划分</span></a></h3><p>划分训练和验证集的原因是为了在线下验证模型参数的好坏，为了完全模拟测试集，我们这里就在训练集中抽取部分用户的所有信息来作为验证集。提前做训练验证集划分的好处就是可以分解制作排序特征时的压力，一次性做整个数据集的排序特征可能时间会比较长。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># all_click_df指的是训练集</span>
<span class="token comment"># sample_user_nums 采样作为验证集的用户数量</span>
<span class="token keyword">def</span> <span class="token function">trn_val_split</span><span class="token punctuation">(</span>all_click_df<span class="token punctuation">,</span> sample_user_nums<span class="token punctuation">)</span><span class="token punctuation">:</span>
    all_click <span class="token operator">=</span> all_click_df
    all_user_ids <span class="token operator">=</span> all_click<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token comment"># replace=True表示可以重复抽样，反之不可以</span>
    sample_user_ids <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>all_user_ids<span class="token punctuation">,</span> size<span class="token operator">=</span>sample_user_nums<span class="token punctuation">,</span> replace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> 
    
    click_val <span class="token operator">=</span> all_click<span class="token punctuation">[</span>all_click<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>sample_user_ids<span class="token punctuation">)</span><span class="token punctuation">]</span>
    click_trn <span class="token operator">=</span> all_click<span class="token punctuation">[</span><span class="token operator">~</span>all_click<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>sample_user_ids<span class="token punctuation">)</span><span class="token punctuation">]</span>
    
    <span class="token comment"># 将验证集中的最后一次点击给抽取出来作为答案</span>
    click_val <span class="token operator">=</span> click_val<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    val_ans <span class="token operator">=</span> click_val<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    
    click_val <span class="token operator">=</span> click_val<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 去除val_ans中某些用户只有一个点击数据的情况，如果该用户只有一个点击数据，又被分到ans中，</span>
    <span class="token comment"># 那么训练集中就没有这个用户的点击数据，出现用户冷启动问题，给自己模型验证带来麻烦</span>
    val_ans <span class="token operator">=</span> val_ans<span class="token punctuation">[</span>val_ans<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>isin<span class="token punctuation">(</span>click_val<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># 保证答案中出现的用户再验证集中还有</span>
    click_val <span class="token operator">=</span> click_val<span class="token punctuation">[</span>click_val<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>isin<span class="token punctuation">(</span>val_ans<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    
    <span class="token keyword">return</span> click_trn<span class="token punctuation">,</span> click_val<span class="token punctuation">,</span> val_ans
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取历史点击和最后一次点击" tabindex="-1"><a class="header-anchor" href="#获取历史点击和最后一次点击"><span>获取历史点击和最后一次点击</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 获取当前数据的历史点击和最后一次点击</span>
<span class="token keyword">def</span> <span class="token function">get_hist_and_last_click</span><span class="token punctuation">(</span>all_click<span class="token punctuation">)</span><span class="token punctuation">:</span>
    all_click <span class="token operator">=</span> all_click<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    click_last_df <span class="token operator">=</span> all_click<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token comment"># 如果用户只有一个点击，hist为空了，会导致训练的时候这个用户不可见，此时默认泄露一下</span>
    <span class="token keyword">def</span> <span class="token function">hist_func</span><span class="token punctuation">(</span>user_df<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>user_df<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> user_df
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> user_df<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>

    click_hist_df <span class="token operator">=</span> all_click<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>hist_func<span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> click_hist_df<span class="token punctuation">,</span> click_last_df
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取训练、验证及测试集" tabindex="-1"><a class="header-anchor" href="#读取训练、验证及测试集"><span>读取训练、验证及测试集</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_trn_val_tst_data</span><span class="token punctuation">(</span>data_path<span class="token punctuation">,</span> offline<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> offline<span class="token punctuation">:</span>
        click_trn_data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>data_path<span class="token operator">+</span><span class="token string">&#39;train_click_log.csv&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 训练集用户点击日志</span>
        click_trn_data <span class="token operator">=</span> reduce_mem<span class="token punctuation">(</span>click_trn_data<span class="token punctuation">)</span>
        click_trn<span class="token punctuation">,</span> click_val<span class="token punctuation">,</span> val_ans <span class="token operator">=</span> trn_val_split<span class="token punctuation">(</span>all_click_df<span class="token punctuation">,</span> sample_user_nums<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        click_trn <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>data_path<span class="token operator">+</span><span class="token string">&#39;train_click_log.csv&#39;</span><span class="token punctuation">)</span>
        click_trn <span class="token operator">=</span> reduce_mem<span class="token punctuation">(</span>click_trn<span class="token punctuation">)</span>
        click_val <span class="token operator">=</span> <span class="token boolean">None</span>
        val_ans <span class="token operator">=</span> <span class="token boolean">None</span>
    
    click_tst <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>data_path<span class="token operator">+</span><span class="token string">&#39;testA_click_log.csv&#39;</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> click_trn<span class="token punctuation">,</span> click_val<span class="token punctuation">,</span> click_tst<span class="token punctuation">,</span> val_ans
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取召回列表" tabindex="-1"><a class="header-anchor" href="#读取召回列表"><span>读取召回列表</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 返回多路召回列表或者单路召回</span>
<span class="token keyword">def</span> <span class="token function">get_recall_list</span><span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> single_recall_model<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> multi_recall<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> multi_recall<span class="token punctuation">:</span>
        <span class="token keyword">return</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;final_recall_items_dict.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token keyword">if</span> single_recall_model <span class="token operator">==</span> <span class="token string">&#39;i2i_itemcf&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;itemcf_recall_dict.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> single_recall_model <span class="token operator">==</span> <span class="token string">&#39;i2i_emb_itemcf&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;itemcf_emb_dict.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> single_recall_model <span class="token operator">==</span> <span class="token string">&#39;user_cf&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;youtubednn_usercf_dict.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> single_recall_model <span class="token operator">==</span> <span class="token string">&#39;youtubednn&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;youtube_u2i_dict.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取各种embedding" tabindex="-1"><a class="header-anchor" href="#读取各种embedding"><span>读取各种Embedding</span></a></h3><h4 id="word2vec训练及gensim的使用" tabindex="-1"><a class="header-anchor" href="#word2vec训练及gensim的使用"><span>Word2Vec训练及gensim的使用</span></a></h4><p>Word2Vec主要思想是：一个词的上下文可以很好的表达出词的语义。通过无监督学习产生词向量的方式。word2vec中有两个非常经典的模型：skip-gram和cbow。</p><ul><li>skip-gram：已知中心词预测周围词。</li><li>cbow：已知周围词预测中心词。 <img src="http://ryluo.oss-cn-chengdu.aliyuncs.com/Javaimage-20201106225233086.png" alt="image-20201106225233086" loading="lazy"></li></ul><p>在使用gensim训练word2vec的时候，有几个比较重要的参数</p><ul><li>size: 表示词向量的维度。</li><li>window：决定了目标词会与多远距离的上下文产生关系。</li><li>sg: 如果是0，则是CBOW模型，是1则是Skip-Gram模型。</li><li>workers: 表示训练时候的线程数量</li><li>min_count: 设置最小的</li><li>iter: 训练时遍历整个数据集的次数</li></ul><p><strong>注意</strong></p><ol><li>训练的时候输入的语料库一定要是字符组成的二维数组，如：[[&#39;北&#39;, &#39;京&#39;, &#39;你&#39;, &#39;好&#39;], [&#39;上&#39;, &#39;海&#39;, &#39;你&#39;, &#39;好&#39;]]</li><li>使用模型的时候有一些默认值，可以通过在Jupyter里面通过<code>Word2Vec??</code>查看</li></ol><p>下面是个简单的测试样例：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>from gensim.models import Word2Vec
doc = [[&#39;30760&#39;, &#39;157507&#39;],
       [&#39;289197&#39;, &#39;63746&#39;],
       [&#39;36162&#39;, &#39;168401&#39;],
       [&#39;50644&#39;, &#39;36162&#39;]]
w2v = Word2Vec(docs, size=12, sg=1, window=2, seed=2020, workers=2, min_count=1, iter=1)

# 查看&#39;30760&#39;表示的词向量
w2v[&#39;30760&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>skip-gram和cbow的详细原理可以参考下面的博客：</p>`,36),r={href:"https://www.cnblogs.com/pinard/p/7160330.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.cnblogs.com/pinard/p/7160330.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.cnblogs.com/pinard/p/7249903.html",target:"_blank",rel:"noopener noreferrer"},_=p(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">trian_item_word2vec</span><span class="token punctuation">(</span>click_df<span class="token punctuation">,</span> embed_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> save_name<span class="token operator">=</span><span class="token string">&#39;item_w2v_emb.pkl&#39;</span><span class="token punctuation">,</span> split_char<span class="token operator">=</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    click_df <span class="token operator">=</span> click_df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 只有转换成字符串才可以进行训练</span>
    click_df<span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> click_df<span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span>
    <span class="token comment"># 转换成句子的形式</span>
    docs <span class="token operator">=</span> click_df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
    docs <span class="token operator">=</span> docs<span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># 为了方便查看训练的进度，这里设定一个log信息</span>
    logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;%(asctime)s:%(levelname)s:%(message)s&#39;</span><span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>

    <span class="token comment"># 这里的参数对训练得到的向量影响也很大,默认负采样为5</span>
    w2v <span class="token operator">=</span> Word2Vec<span class="token punctuation">(</span>docs<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> sg<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> window<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> seed<span class="token operator">=</span><span class="token number">2020</span><span class="token punctuation">,</span> workers<span class="token operator">=</span><span class="token number">24</span><span class="token punctuation">,</span> min_count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">iter</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 保存成字典的形式</span>
    item_w2v_emb_dict <span class="token operator">=</span> <span class="token punctuation">{</span>k<span class="token punctuation">:</span> w2v<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token keyword">for</span> k <span class="token keyword">in</span> click_df<span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
    pickle<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>item_w2v_emb_dict<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;item_w2v_emb.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> item_w2v_emb_dict
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 可以通过字典查询对应的item的Embedding</span>
<span class="token keyword">def</span> <span class="token function">get_embedding</span><span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> all_click_df<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;item_content_emb.pkl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        item_content_emb_dict <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;item_content_emb.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;item_content_emb.pkl 文件不存在...&#39;</span><span class="token punctuation">)</span>
        
    <span class="token comment"># w2v Embedding是需要提前训练好的</span>
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;item_w2v_emb.pkl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        item_w2v_emb_dict <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;item_w2v_emb.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        item_w2v_emb_dict <span class="token operator">=</span> trian_item_word2vec<span class="token punctuation">(</span>all_click_df<span class="token punctuation">)</span>
        
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;item_youtube_emb.pkl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        item_youtube_emb_dict <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;item_youtube_emb.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;item_youtube_emb.pkl 文件不存在...&#39;</span><span class="token punctuation">)</span>
    
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;user_youtube_emb.pkl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        user_youtube_emb_dict <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;user_youtube_emb.pkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;user_youtube_emb.pkl 文件不存在...&#39;</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> item_content_emb_dict<span class="token punctuation">,</span> item_w2v_emb_dict<span class="token punctuation">,</span> item_youtube_emb_dict<span class="token punctuation">,</span> user_youtube_emb_dict
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取文章信息" tabindex="-1"><a class="header-anchor" href="#读取文章信息"><span>读取文章信息</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_article_info_df</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    article_info_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>data_path <span class="token operator">+</span> <span class="token string">&#39;articles.csv&#39;</span><span class="token punctuation">)</span>
    article_info_df <span class="token operator">=</span> reduce_mem<span class="token punctuation">(</span>article_info_df<span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> article_info_df
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取数据" tabindex="-1"><a class="header-anchor" href="#读取数据"><span>读取数据</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 这里offline的online的区别就是验证集是否为空</span>
click_trn<span class="token punctuation">,</span> click_val<span class="token punctuation">,</span> click_tst<span class="token punctuation">,</span> val_ans <span class="token operator">=</span> get_trn_val_tst_data<span class="token punctuation">(</span>data_path<span class="token punctuation">,</span> offline<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>-- Mem. usage decreased to 23.34 Mb (69.4% reduction),time spend:0.00 min
</code></pre><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>click_trn_hist<span class="token punctuation">,</span> click_trn_last <span class="token operator">=</span> get_hist_and_last_click<span class="token punctuation">(</span>click_trn<span class="token punctuation">)</span>

<span class="token keyword">if</span> click_val <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    click_val_hist<span class="token punctuation">,</span> click_val_last <span class="token operator">=</span> click_val<span class="token punctuation">,</span> val_ans
<span class="token keyword">else</span><span class="token punctuation">:</span>
    click_val_hist<span class="token punctuation">,</span> click_val_last <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span>
    
click_tst_hist <span class="token operator">=</span> click_tst
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对训练数据做负采样" tabindex="-1"><a class="header-anchor" href="#对训练数据做负采样"><span>对训练数据做负采样</span></a></h2><p>通过召回我们将数据转换成三元组的形式（user1, item1, label）的形式，观察发现正负样本差距极度不平衡，我们可以先对负样本进行下采样，下采样的目的一方面缓解了正负样本比例的问题，另一方面也减小了我们做排序特征的压力，我们在做负采样的时候又有哪些东西是需要注意的呢？</p><ol><li>只对负样本进行下采样(如果有比较好的正样本扩充的方法其实也是可以考虑的)</li><li>负采样之后，保证所有的用户和文章仍然出现在采样之后的数据中</li><li>下采样的比例可以根据实际情况人为的控制</li><li>做完负采样之后，更新此时新的用户召回文章列表，因为后续做特征的时候可能用到相对位置的信息。</li></ol><p>其实负采样也可以留在后面做完特征在进行，这里由于做排序特征太慢了，所以把负采样的环节提到前面了。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 将召回列表转换成df的形式</span>
<span class="token keyword">def</span> <span class="token function">recall_dict_2_df</span><span class="token punctuation">(</span>recall_list_dict<span class="token punctuation">)</span><span class="token punctuation">:</span>
    df_row_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># [user, item, score]</span>
    <span class="token keyword">for</span> user<span class="token punctuation">,</span> recall_list <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span>recall_list_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> item<span class="token punctuation">,</span> score <span class="token keyword">in</span> recall_list<span class="token punctuation">:</span>
            df_row_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>user<span class="token punctuation">,</span> item<span class="token punctuation">,</span> score<span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    col_names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sim_item&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span>
    recall_list_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>df_row_list<span class="token punctuation">,</span> columns<span class="token operator">=</span>col_names<span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> recall_list_df
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 负采样函数，这里可以控制负采样时的比例, 这里给了一个默认的值</span>
<span class="token keyword">def</span> <span class="token function">neg_sample_recall_data</span><span class="token punctuation">(</span>recall_items_df<span class="token punctuation">,</span> sample_rate<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    pos_data <span class="token operator">=</span> recall_items_df<span class="token punctuation">[</span>recall_items_df<span class="token punctuation">[</span><span class="token string">&#39;label&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">]</span>
    neg_data <span class="token operator">=</span> recall_items_df<span class="token punctuation">[</span>recall_items_df<span class="token punctuation">[</span><span class="token string">&#39;label&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span>
    
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;pos_data_num:&#39;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pos_data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;neg_data_num:&#39;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>neg_data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;pos/neg:&#39;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pos_data<span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>neg_data<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 分组采样函数</span>
    <span class="token keyword">def</span> <span class="token function">neg_sample_func</span><span class="token punctuation">(</span>group_df<span class="token punctuation">)</span><span class="token punctuation">:</span>
        neg_num <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>group_df<span class="token punctuation">)</span>
        sample_num <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>neg_num <span class="token operator">*</span> sample_rate<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 保证最少有一个</span>
        sample_num <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>sample_num<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 保证最多不超过5个，这里可以根据实际情况进行选择</span>
        <span class="token keyword">return</span> group_df<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>n<span class="token operator">=</span>sample_num<span class="token punctuation">,</span> replace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 对用户进行负采样，保证所有用户都在采样后的数据中</span>
    neg_data_user_sample <span class="token operator">=</span> neg_data<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>neg_sample_func<span class="token punctuation">)</span>
    <span class="token comment"># 对文章进行负采样，保证所有文章都在采样后的数据中</span>
    neg_data_item_sample <span class="token operator">=</span> neg_data<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;sim_item&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>neg_sample_func<span class="token punctuation">)</span>
    
    <span class="token comment"># 将上述两种情况下的采样数据合并</span>
    neg_data_new <span class="token operator">=</span> neg_data_user_sample<span class="token punctuation">.</span>append<span class="token punctuation">(</span>neg_data_item_sample<span class="token punctuation">)</span>
    <span class="token comment"># 由于上述两个操作是分开的，可能将两个相同的数据给重复选择了，所以需要对合并后的数据进行去重</span>
    neg_data_new <span class="token operator">=</span> neg_data_new<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sim_item&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keep<span class="token operator">=</span><span class="token string">&#39;last&#39;</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 将正样本数据合并</span>
    data_new <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>pos_data<span class="token punctuation">,</span> neg_data_new<span class="token punctuation">]</span><span class="token punctuation">,</span> ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> data_new
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 召回数据打标签</span>
<span class="token keyword">def</span> <span class="token function">get_rank_label_df</span><span class="token punctuation">(</span>recall_list_df<span class="token punctuation">,</span> label_df<span class="token punctuation">,</span> is_test<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 测试集是没有标签了，为了后面代码同一一些，这里直接给一个负数替代</span>
    <span class="token keyword">if</span> is_test<span class="token punctuation">:</span>
        recall_list_df<span class="token punctuation">[</span><span class="token string">&#39;label&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
        <span class="token keyword">return</span> recall_list_df
    
    label_df <span class="token operator">=</span> label_df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;sim_item&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    recall_list_df_ <span class="token operator">=</span> recall_list_df<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>label_df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sim_item&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \\
                                               how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sim_item&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    recall_list_df_<span class="token punctuation">[</span><span class="token string">&#39;label&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> recall_list_df_<span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">0.0</span> <span class="token keyword">if</span> np<span class="token punctuation">.</span>isnan<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token number">1.0</span><span class="token punctuation">)</span>
    <span class="token keyword">del</span> recall_list_df_<span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span>
    
    <span class="token keyword">return</span> recall_list_df_
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_user_recall_item_label_df</span><span class="token punctuation">(</span>click_trn_hist<span class="token punctuation">,</span> click_val_hist<span class="token punctuation">,</span> click_tst_hist<span class="token punctuation">,</span>click_trn_last<span class="token punctuation">,</span> click_val_last<span class="token punctuation">,</span> recall_list_df<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 获取训练数据的召回列表</span>
    trn_user_items_df <span class="token operator">=</span> recall_list_df<span class="token punctuation">[</span>recall_list_df<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>click_trn_hist<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token comment"># 训练数据打标签</span>
    trn_user_item_label_df <span class="token operator">=</span> get_rank_label_df<span class="token punctuation">(</span>trn_user_items_df<span class="token punctuation">,</span> click_trn_last<span class="token punctuation">,</span> is_test<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token comment"># 训练数据负采样</span>
    trn_user_item_label_df <span class="token operator">=</span> neg_sample_recall_data<span class="token punctuation">(</span>trn_user_item_label_df<span class="token punctuation">)</span>
    
    <span class="token keyword">if</span> click_val <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        val_user_items_df <span class="token operator">=</span> recall_list_df<span class="token punctuation">[</span>recall_list_df<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>click_val_hist<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        val_user_item_label_df <span class="token operator">=</span> get_rank_label_df<span class="token punctuation">(</span>val_user_items_df<span class="token punctuation">,</span> click_val_last<span class="token punctuation">,</span> is_test<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        val_user_item_label_df <span class="token operator">=</span> neg_sample_recall_data<span class="token punctuation">(</span>val_user_item_label_df<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        val_user_item_label_df <span class="token operator">=</span> <span class="token boolean">None</span>
        
    <span class="token comment"># 测试数据不需要进行负采样，直接对所有的召回商品进行打-1标签</span>
    tst_user_items_df <span class="token operator">=</span> recall_list_df<span class="token punctuation">[</span>recall_list_df<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>click_tst_hist<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    tst_user_item_label_df <span class="token operator">=</span> get_rank_label_df<span class="token punctuation">(</span>tst_user_items_df<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> is_test<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> trn_user_item_label_df<span class="token punctuation">,</span> val_user_item_label_df<span class="token punctuation">,</span> tst_user_item_label_df
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 读取召回列表</span>
recall_list_dict <span class="token operator">=</span> get_recall_list<span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> single_recall_model<span class="token operator">=</span><span class="token string">&#39;i2i_itemcf&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 这里只选择了单路召回的结果，也可以选择多路召回结果</span>
<span class="token comment"># 将召回数据转换成df</span>
recall_list_df <span class="token operator">=</span> recall_dict_2_df<span class="token punctuation">(</span>recall_list_dict<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>100%|██████████| 250000/250000 [00:12&lt;00:00, 20689.39it/s]
</code></pre><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 给训练验证数据打标签，并负采样（这一部分时间比较久）</span>
trn_user_item_label_df<span class="token punctuation">,</span> val_user_item_label_df<span class="token punctuation">,</span> tst_user_item_label_df <span class="token operator">=</span> get_user_recall_item_label_df<span class="token punctuation">(</span>click_trn_hist<span class="token punctuation">,</span> 
                                                                                                       click_val_hist<span class="token punctuation">,</span> 
                                                                                                       click_tst_hist<span class="token punctuation">,</span>
                                                                                                       click_trn_last<span class="token punctuation">,</span> 
                                                                                                       click_val_last<span class="token punctuation">,</span> 
                                                                                                       recall_list_df<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>pos_data_num: 64190 neg_data_num: 1935810 pos/neg: 0.03315924600038227
</code></pre><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>trn_user_item_label_df<span class="token punctuation">.</span>label
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="将召回数据转换成字典" tabindex="-1"><a class="header-anchor" href="#将召回数据转换成字典"><span>将召回数据转换成字典</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 将最终的召回的df数据转换成字典的形式做排序特征</span>
<span class="token keyword">def</span> <span class="token function">make_tuple_func</span><span class="token punctuation">(</span>group_df<span class="token punctuation">)</span><span class="token punctuation">:</span>
    row_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> name<span class="token punctuation">,</span> row_df <span class="token keyword">in</span> group_df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        row_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>row_df<span class="token punctuation">[</span><span class="token string">&#39;sim_item&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> row_df<span class="token punctuation">[</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> row_df<span class="token punctuation">[</span><span class="token string">&#39;label&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> row_data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>trn_user_item_label_tuples <span class="token operator">=</span> trn_user_item_label_df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>make_tuple_func<span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
trn_user_item_label_tuples_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>trn_user_item_label_tuples<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> trn_user_item_label_tuples<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> val_user_item_label_df <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    val_user_item_label_tuples <span class="token operator">=</span> val_user_item_label_df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>make_tuple_func<span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
    val_user_item_label_tuples_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>val_user_item_label_tuples<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val_user_item_label_tuples<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    val_user_item_label_tuples_dict <span class="token operator">=</span> <span class="token boolean">None</span>
    
tst_user_item_label_tuples <span class="token operator">=</span> tst_user_item_label_df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>make_tuple_func<span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
tst_user_item_label_tuples_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>tst_user_item_label_tuples<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tst_user_item_label_tuples<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用户历史行为相关特征" tabindex="-1"><a class="header-anchor" href="#用户历史行为相关特征"><span>用户历史行为相关特征</span></a></h2><p>对于每个用户召回的每个商品， 做特征。 具体步骤如下：</p><ul><li>对于每个用户， 获取最后点击的N个商品的item_id， <ul><li>对于该用户的每个召回商品， 计算与上面最后N次点击商品的相似度的和(最大， 最小，均值)， 时间差特征，相似性特征，字数差特征，与该用户的相似性特征</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 下面基于data做历史相关的特征</span>
<span class="token keyword">def</span> <span class="token function">create_feature</span><span class="token punctuation">(</span>users_id<span class="token punctuation">,</span> recall_list<span class="token punctuation">,</span> click_hist_df<span class="token punctuation">,</span>  articles_info<span class="token punctuation">,</span> articles_emb<span class="token punctuation">,</span> user_emb<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> N<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    基于用户的历史行为做相关特征
    :param users_id: 用户id
    :param recall_list: 对于每个用户召回的候选文章列表
    :param click_hist_df: 用户的历史点击信息
    :param articles_info: 文章信息
    :param articles_emb: 文章的embedding向量, 这个可以用item_content_emb, item_w2v_emb, item_youtube_emb
    :param user_emb: 用户的embedding向量， 这个是user_youtube_emb, 如果没有也可以不用， 但要注意如果要用的话， articles_emb就要用item_youtube_emb的形式， 这样维度才一样
    :param N: 最近的N次点击  由于testA日志里面很多用户只存在一次历史点击， 所以为了不产生空值，默认是1
    &quot;&quot;&quot;</span>
    
    <span class="token comment"># 建立一个二维列表保存结果， 后面要转成DataFrame</span>
    all_user_feas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> user_id <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span>users_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 该用户的最后N次点击</span>
        hist_user_items <span class="token operator">=</span> click_hist_df<span class="token punctuation">[</span>click_hist_df<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span>user_id<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span>N<span class="token punctuation">:</span><span class="token punctuation">]</span>
        
        <span class="token comment"># 遍历该用户的召回列表</span>
        <span class="token keyword">for</span> rank<span class="token punctuation">,</span> <span class="token punctuation">(</span>article_id<span class="token punctuation">,</span> score<span class="token punctuation">,</span> label<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>recall_list<span class="token punctuation">[</span>user_id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token comment"># 该文章建立时间, 字数</span>
            a_create_time <span class="token operator">=</span> articles_info<span class="token punctuation">[</span>articles_info<span class="token punctuation">[</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span>article_id<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            a_words_count <span class="token operator">=</span> articles_info<span class="token punctuation">[</span>articles_info<span class="token punctuation">[</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span>article_id<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;words_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            single_user_fea <span class="token operator">=</span> <span class="token punctuation">[</span>user_id<span class="token punctuation">,</span> article_id<span class="token punctuation">]</span>
            <span class="token comment"># 计算与最后点击的商品的相似度的和， 最大值和最小值， 均值</span>
            sim_fea <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            time_fea <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            word_fea <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token comment"># 遍历用户的最后N次点击文章</span>
            <span class="token keyword">for</span> hist_item <span class="token keyword">in</span> hist_user_items<span class="token punctuation">:</span>
                b_create_time <span class="token operator">=</span> articles_info<span class="token punctuation">[</span>articles_info<span class="token punctuation">[</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span>hist_item<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
                b_words_count <span class="token operator">=</span> articles_info<span class="token punctuation">[</span>articles_info<span class="token punctuation">[</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span>hist_item<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;words_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
                
                sim_fea<span class="token punctuation">.</span>append<span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>articles_emb<span class="token punctuation">[</span>hist_item<span class="token punctuation">]</span><span class="token punctuation">,</span> articles_emb<span class="token punctuation">[</span>article_id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                time_fea<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>a_create_time<span class="token operator">-</span>b_create_time<span class="token punctuation">)</span><span class="token punctuation">)</span>
                word_fea<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>a_words_count<span class="token operator">-</span>b_words_count<span class="token punctuation">)</span><span class="token punctuation">)</span>
                
            single_user_fea<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>sim_fea<span class="token punctuation">)</span>      <span class="token comment"># 相似性特征</span>
            single_user_fea<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>time_fea<span class="token punctuation">)</span>    <span class="token comment"># 时间差特征</span>
            single_user_fea<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>word_fea<span class="token punctuation">)</span>    <span class="token comment"># 字数差特征</span>
            single_user_fea<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">max</span><span class="token punctuation">(</span>sim_fea<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">min</span><span class="token punctuation">(</span>sim_fea<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>sim_fea<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>sim_fea<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sim_fea<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 相似性的统计特征</span>
            
            <span class="token keyword">if</span> user_emb<span class="token punctuation">:</span>  <span class="token comment"># 如果用户向量有的话， 这里计算该召回文章与用户的相似性特征 </span>
                single_user_fea<span class="token punctuation">.</span>append<span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>user_emb<span class="token punctuation">[</span>user_id<span class="token punctuation">]</span><span class="token punctuation">,</span> articles_emb<span class="token punctuation">[</span>article_id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                
            single_user_fea<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span>score<span class="token punctuation">,</span> rank<span class="token punctuation">,</span> label<span class="token punctuation">]</span><span class="token punctuation">)</span>    
            <span class="token comment"># 加入到总的表中</span>
            all_user_feas<span class="token punctuation">.</span>append<span class="token punctuation">(</span>single_user_fea<span class="token punctuation">)</span>
    
    <span class="token comment"># 定义列名</span>
    id_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span>
    sim_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;sim&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span>
    time_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;time_diff&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span>
    word_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;word_diff&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span>
    sat_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;sim_max&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sim_min&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sim_sum&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sim_mean&#39;</span><span class="token punctuation">]</span>
    user_item_sim_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;user_item_sim&#39;</span><span class="token punctuation">]</span> <span class="token keyword">if</span> user_emb <span class="token keyword">else</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    user_score_rank_label <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rank&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;label&#39;</span><span class="token punctuation">]</span>
    cols <span class="token operator">=</span> id_cols <span class="token operator">+</span> sim_cols <span class="token operator">+</span> time_cols <span class="token operator">+</span> word_cols <span class="token operator">+</span> sat_cols <span class="token operator">+</span> user_item_sim_cols <span class="token operator">+</span> user_score_rank_label
            
    <span class="token comment"># 转成DataFrame</span>
    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span> all_user_feas<span class="token punctuation">,</span> columns<span class="token operator">=</span>cols<span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> df
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>article_info_df <span class="token operator">=</span> get_article_info_df<span class="token punctuation">(</span><span class="token punctuation">)</span>
all_click <span class="token operator">=</span> click_trn<span class="token punctuation">.</span>append<span class="token punctuation">(</span>click_tst<span class="token punctuation">)</span>
item_content_emb_dict<span class="token punctuation">,</span> item_w2v_emb_dict<span class="token punctuation">,</span> item_youtube_emb_dict<span class="token punctuation">,</span> user_youtube_emb_dict <span class="token operator">=</span> get_embedding<span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> all_click<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>-- Mem. usage decreased to  5.56 Mb (50.0% reduction),time spend:0.00 min
</code></pre><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 获取训练验证及测试数据中召回列文章相关特征</span>
trn_user_item_feats_df <span class="token operator">=</span> create_feature<span class="token punctuation">(</span>trn_user_item_label_tuples_dict<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> trn_user_item_label_tuples_dict<span class="token punctuation">,</span> \\
                                            click_trn_hist<span class="token punctuation">,</span> article_info_df<span class="token punctuation">,</span> item_content_emb_dict<span class="token punctuation">)</span>

<span class="token keyword">if</span> val_user_item_label_tuples_dict <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> create_feature<span class="token punctuation">(</span>val_user_item_label_tuples_dict<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> val_user_item_label_tuples_dict<span class="token punctuation">,</span> \\
                                                click_val_hist<span class="token punctuation">,</span> article_info_df<span class="token punctuation">,</span> item_content_emb_dict<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> <span class="token boolean">None</span>
    
tst_user_item_feats_df <span class="token operator">=</span> create_feature<span class="token punctuation">(</span>tst_user_item_label_tuples_dict<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tst_user_item_label_tuples_dict<span class="token punctuation">,</span> \\
                                            click_tst_hist<span class="token punctuation">,</span> article_info_df<span class="token punctuation">,</span> item_content_emb_dict<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>100%|██████████| 200000/200000 [50:16&lt;00:00, 66.31it/s] 
100%|██████████| 50000/50000 [1:07:21&lt;00:00, 12.37it/s]
</code></pre><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 保存一份省的每次都要重新跑，每次跑的时间都比较长</span>
trn_user_item_feats_df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;trn_user_item_feats_df.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> val_user_item_feats_df <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    val_user_item_feats_df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;val_user_item_feats_df.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

tst_user_item_feats_df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;tst_user_item_feats_df.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用户和文章特征" tabindex="-1"><a class="header-anchor" href="#用户和文章特征"><span>用户和文章特征</span></a></h2><h3 id="用户相关特征" tabindex="-1"><a class="header-anchor" href="#用户相关特征"><span>用户相关特征</span></a></h3><p>这一块，正式进行特征工程，既要拼接上已有的特征， 也会做更多的特征出来，我们来梳理一下已有的特征和可构造特征：</p><ol><li>文章自身的特征， 文章字数，文章创建时间， 文章的embedding （articles表中)</li><li>用户点击环境特征， 那些设备的特征(这个在df中)</li><li>对于用户和商品还可以构造的特征： <ul><li>基于用户的点击文章次数和点击时间构造可以表现用户活跃度的特征</li><li>基于文章被点击次数和时间构造可以反映文章热度的特征</li><li>用户的时间统计特征： 根据其点击的历史文章列表的点击时间和文章的创建时间做统计特征，比如求均值， 这个可以反映用户对于文章时效的偏好</li><li>用户的主题爱好特征， 对于用户点击的历史文章主题进行一个统计， 然后对于当前文章看看是否属于用户已经点击过的主题</li><li>用户的字数爱好特征， 对于用户点击的历史文章的字数统计， 求一个均值</li></ul></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>click_tst<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 读取文章特征</span>
articles <span class="token operator">=</span>  pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>data_path<span class="token operator">+</span><span class="token string">&#39;articles.csv&#39;</span><span class="token punctuation">)</span>
articles <span class="token operator">=</span> reduce_mem<span class="token punctuation">(</span>articles<span class="token punctuation">)</span>

<span class="token comment"># 日志数据，就是前面的所有数据</span>
<span class="token keyword">if</span> click_val <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    all_data <span class="token operator">=</span> click_trn<span class="token punctuation">.</span>append<span class="token punctuation">(</span>click_val<span class="token punctuation">)</span>
all_data <span class="token operator">=</span> click_trn<span class="token punctuation">.</span>append<span class="token punctuation">(</span>click_tst<span class="token punctuation">)</span>
all_data <span class="token operator">=</span> reduce_mem<span class="token punctuation">(</span>all_data<span class="token punctuation">)</span>

<span class="token comment"># 拼上文章信息</span>
all_data <span class="token operator">=</span> all_data<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>articles<span class="token punctuation">,</span> left_on<span class="token operator">=</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> right_on<span class="token operator">=</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>all_data<span class="token punctuation">.</span>shape
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="分析一下点击时间和点击文章的次数-区分用户活跃度" tabindex="-1"><a class="header-anchor" href="#分析一下点击时间和点击文章的次数-区分用户活跃度"><span>分析一下点击时间和点击文章的次数，区分用户活跃度</span></a></h4><p>如果某个用户点击文章之间的时间间隔比较小， 同时点击的文章次数很多的话， 那么我们认为这种用户一般就是活跃用户, 当然衡量用户活跃度的方式可能多种多样， 这里我们只提供其中一种，我们写一个函数， 得到可以衡量用户活跃度的特征，逻辑如下：</p><ol><li>首先根据用户user_id分组， 对于每个用户，计算点击文章的次数， 两两点击文章时间间隔的均值</li><li>把点击次数取倒数和时间间隔的均值统一归一化，然后两者相加合并，该值越小， 说明用户越活跃</li><li>注意， 上面两两点击文章的时间间隔均值， 会出现如果用户只点击了一次的情况，这时候时间间隔均值那里会出现空值， 对于这种情况最后特征那里给个大数进行区分</li></ol><p>这个的衡量标准就是先把点击的次数取到数然后归一化， 然后点击的时间差归一化， 然后两者相加进行合并， 该值越小， 说明被点击的次数越多， 且间隔时间短。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code> <span class="token keyword">def</span> <span class="token function">active_level</span><span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> cols<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    制作区分用户活跃度的特征
    :param all_data: 数据集
    :param cols: 用到的特征列
    &quot;&quot;&quot;</span>
    data <span class="token operator">=</span> all_data<span class="token punctuation">[</span>cols<span class="token punctuation">]</span>
    data<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    user_act <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> as_index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\\
                            agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">:</span>np<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token builtin">list</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_size&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 计算时间间隔的均值</span>
    <span class="token keyword">def</span> <span class="token function">time_diff_mean</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token number">1</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">[</span>j<span class="token operator">-</span>i <span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>l<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        
    user_act<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> time_diff_mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 点击次数取倒数</span>
    user_act<span class="token punctuation">[</span><span class="token string">&#39;click_size&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;click_size&#39;</span><span class="token punctuation">]</span>
    
    <span class="token comment"># 两者归一化</span>
    user_act<span class="token punctuation">[</span><span class="token string">&#39;click_size&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>user_act<span class="token punctuation">[</span><span class="token string">&#39;click_size&#39;</span><span class="token punctuation">]</span> <span class="token operator">-</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;click_size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>user_act<span class="token punctuation">[</span><span class="token string">&#39;click_size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;click_size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    user_act<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>user_act<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span> <span class="token operator">-</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>user_act<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     
    user_act<span class="token punctuation">[</span><span class="token string">&#39;active_level&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;click_size&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span>
    
    user_act<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">del</span> user_act<span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span>
    
    <span class="token keyword">return</span> user_act
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_act_fea <span class="token operator">=</span> active_level<span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_act_fea<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="分析一下点击时间和被点击文章的次数-衡量文章热度特征" tabindex="-1"><a class="header-anchor" href="#分析一下点击时间和被点击文章的次数-衡量文章热度特征"><span>分析一下点击时间和被点击文章的次数， 衡量文章热度特征</span></a></h4><p>和上面同样的思路， 如果一篇文章在很短的时间间隔之内被点击了很多次， 说明文章比较热门，实现的逻辑和上面的基本一致， 只不过这里是按照点击的文章进行分组：</p><ol><li>根据文章进行分组， 对于每篇文章的用户， 计算点击的时间间隔</li><li>将用户的数量取倒数， 然后用户的数量和时间间隔归一化， 然后相加得到热度特征， 该值越小， 说明被点击的次数越大且时间间隔越短， 文章比较热</li></ol><p>当然， 这只是给出一种判断文章热度的一种方法， 这里大家也可以头脑风暴一下</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code> <span class="token keyword">def</span> <span class="token function">hot_level</span><span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> cols<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    制作衡量文章热度的特征
    :param all_data: 数据集
    :param cols: 用到的特征列
    &quot;&quot;&quot;</span>
    data <span class="token operator">=</span> all_data<span class="token punctuation">[</span>cols<span class="token punctuation">]</span>
    data<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    article_hot <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> as_index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\\
                               agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">:</span>np<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token builtin">list</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;user_num&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 计算被点击时间间隔的均值</span>
    <span class="token keyword">def</span> <span class="token function">time_diff_mean</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token number">1</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">[</span>j<span class="token operator">-</span>i <span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>l<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        
    article_hot<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> time_diff_mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 点击次数取倒数</span>
    article_hot<span class="token punctuation">[</span><span class="token string">&#39;user_num&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;user_num&#39;</span><span class="token punctuation">]</span>
    
    <span class="token comment"># 两者归一化</span>
    article_hot<span class="token punctuation">[</span><span class="token string">&#39;user_num&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>article_hot<span class="token punctuation">[</span><span class="token string">&#39;user_num&#39;</span><span class="token punctuation">]</span> <span class="token operator">-</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;user_num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>article_hot<span class="token punctuation">[</span><span class="token string">&#39;user_num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;user_num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    article_hot<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>article_hot<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span> <span class="token operator">-</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>article_hot<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     
    article_hot<span class="token punctuation">[</span><span class="token string">&#39;hot_level&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;user_num&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;time_diff_mean&#39;</span><span class="token punctuation">]</span>
    
    article_hot<span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">)</span>
    
    <span class="token keyword">del</span> article_hot<span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span>
    
    <span class="token keyword">return</span> article_hot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>article_hot_fea <span class="token operator">=</span> hot_level<span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>article_hot_fea<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="用户的系列习惯" tabindex="-1"><a class="header-anchor" href="#用户的系列习惯"><span>用户的系列习惯</span></a></h4><p>这个基于原来的日志表做一个类似于article的那种DataFrame， 存放用户特有的信息, 主要包括点击习惯， 爱好特征之类的</p><ul><li>用户的设备习惯， 这里取最常用的设备（众数）</li><li>用户的时间习惯： 根据其点击过得历史文章的时间来做一个统计（这个感觉最好是把时间戳里的时间特征的h特征提出来，看看用户习惯一天的啥时候点击文章）， 但这里先用转换的时间吧， 求个均值</li><li>用户的爱好特征， 对于用户点击的历史文章主题进行用户的爱好判别， 更偏向于哪几个主题， 这个最好是multi-hot进行编码， 先试试行不</li><li>用户文章的字数差特征， 用户的爱好文章的字数习惯</li></ul><p>这些就是对用户进行分组， 然后统计即可</p><h4 id="用户的设备习惯" tabindex="-1"><a class="header-anchor" href="#用户的设备习惯"><span>用户的设备习惯</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">device_fea</span><span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> cols<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    制作用户的设备特征
    :param all_data: 数据集
    :param cols: 用到的特征列
    &quot;&quot;&quot;</span>
    user_device_info <span class="token operator">=</span> all_data<span class="token punctuation">[</span>cols<span class="token punctuation">]</span>
    
    <span class="token comment"># 用众数来表示每个用户的设备信息</span>
    user_device_info <span class="token operator">=</span> user_device_info<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>index<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> user_device_info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 设备特征(这里时间会比较长)</span>
device_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_environment&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_deviceGroup&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_os&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_country&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_region&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_referrer_type&#39;</span><span class="token punctuation">]</span>
user_device_info <span class="token operator">=</span> device_fea<span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> device_cols<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_device_info<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="用户的时间习惯" tabindex="-1"><a class="header-anchor" href="#用户的时间习惯"><span>用户的时间习惯</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">user_time_hob_fea</span><span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> cols<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    制作用户的时间习惯特征
    :param all_data: 数据集
    :param cols: 用到的特征列
    &quot;&quot;&quot;</span>
    user_time_hob_info <span class="token operator">=</span> all_data<span class="token punctuation">[</span>cols<span class="token punctuation">]</span>
    
    <span class="token comment"># 先把时间戳进行归一化</span>
    mm <span class="token operator">=</span> MinMaxScaler<span class="token punctuation">(</span><span class="token punctuation">)</span>
    user_time_hob_info<span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> mm<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>user_time_hob_info<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    user_time_hob_info<span class="token punctuation">[</span><span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> mm<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>user_time_hob_info<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    user_time_hob_info <span class="token operator">=</span> user_time_hob_info<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token string">&#39;mean&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    user_time_hob_info<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;user_time_hob1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;user_time_hob2&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> user_time_hob_info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_time_hob_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click_timestamp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;created_at_ts&#39;</span><span class="token punctuation">]</span>
user_time_hob_info <span class="token operator">=</span> user_time_hob_fea<span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> user_time_hob_cols<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="用户的主题爱好" tabindex="-1"><a class="header-anchor" href="#用户的主题爱好"><span>用户的主题爱好</span></a></h4><p>这里先把用户点击的文章属于的主题转成一个列表， 后面再总的汇总的时候单独制作一个特征， 就是文章的主题如果属于这里面， 就是1， 否则就是0。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">user_cat_hob_fea</span><span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> cols<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    用户的主题爱好
    :param all_data: 数据集
    :param cols: 用到的特征列
    &quot;&quot;&quot;</span>
    user_category_hob_info <span class="token operator">=</span> all_data<span class="token punctuation">[</span>cols<span class="token punctuation">]</span>
    user_category_hob_info <span class="token operator">=</span> user_category_hob_info<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token builtin">list</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    user_cat_hob_info <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
    user_cat_hob_info<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> user_category_hob_info<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span>
    user_cat_hob_info<span class="token punctuation">[</span><span class="token string">&#39;cate_list&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> user_category_hob_info<span class="token punctuation">[</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">]</span>
    
    <span class="token keyword">return</span> user_cat_hob_info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_category_hob_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;category_id&#39;</span><span class="token punctuation">]</span>
user_cat_hob_info <span class="token operator">=</span> user_cat_hob_fea<span class="token punctuation">(</span>all_data<span class="token punctuation">,</span> user_category_hob_cols<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="用户的字数偏好特征" tabindex="-1"><a class="header-anchor" href="#用户的字数偏好特征"><span>用户的字数偏好特征</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_wcou_info <span class="token operator">=</span> all_data<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;words_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token string">&#39;mean&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
user_wcou_info<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;words_count&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;words_hbo&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="用户的信息特征合并保存" tabindex="-1"><a class="header-anchor" href="#用户的信息特征合并保存"><span>用户的信息特征合并保存</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 所有表进行合并</span>
user_info <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>user_act_fea<span class="token punctuation">,</span> user_device_info<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span>
user_info <span class="token operator">=</span> user_info<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>user_time_hob_info<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span>
user_info <span class="token operator">=</span> user_info<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>user_cat_hob_info<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span>
user_info <span class="token operator">=</span> user_info<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>user_wcou_info<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 这样用户特征以后就可以直接读取了</span>
user_info<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;user_info.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用户特征直接读入" tabindex="-1"><a class="header-anchor" href="#用户特征直接读入"><span>用户特征直接读入</span></a></h3><p>如果前面关于用户的特征工程已经给做完了，后面可以直接读取</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 把用户信息直接读入进来</span>
user_info <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;user_info.csv&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;trn_user_item_feats_df.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    trn_user_item_feats_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;trn_user_item_feats_df.csv&#39;</span><span class="token punctuation">)</span>
    
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;tst_user_item_feats_df.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    tst_user_item_feats_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;tst_user_item_feats_df.csv&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;val_user_item_feats_df.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;val_user_item_feats_df.csv&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 拼上用户特征</span>
<span class="token comment"># 下面是线下验证的</span>
trn_user_item_feats_df <span class="token operator">=</span> trn_user_item_feats_df<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>user_info<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> val_user_item_feats_df <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> val_user_item_feats_df<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>user_info<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> <span class="token boolean">None</span>
    
tst_user_item_feats_df <span class="token operator">=</span> tst_user_item_feats_df<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>user_info<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span>how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>trn_user_item_feats_df<span class="token punctuation">.</span>columns
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre><code>Index([&#39;user_id&#39;, &#39;click_article_id&#39;, &#39;sim0&#39;, &#39;time_diff0&#39;, &#39;word_diff0&#39;,
       &#39;sim_max&#39;, &#39;sim_min&#39;, &#39;sim_sum&#39;, &#39;sim_mean&#39;, &#39;score&#39;, &#39;rank&#39;, &#39;label&#39;,
       &#39;click_size&#39;, &#39;time_diff_mean&#39;, &#39;active_level&#39;, &#39;click_environment&#39;,
       &#39;click_deviceGroup&#39;, &#39;click_os&#39;, &#39;click_country&#39;, &#39;click_region&#39;,
       &#39;click_referrer_type&#39;, &#39;user_time_hob1&#39;, &#39;user_time_hob2&#39;, &#39;cate_list&#39;,
       &#39;words_hbo&#39;],
      dtype=&#39;object&#39;)
</code></pre><h3 id="文章的特征直接读入" tabindex="-1"><a class="header-anchor" href="#文章的特征直接读入"><span>文章的特征直接读入</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>articles <span class="token operator">=</span>  pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>data_path<span class="token operator">+</span><span class="token string">&#39;articles.csv&#39;</span><span class="token punctuation">)</span>
articles <span class="token operator">=</span> reduce_mem<span class="token punctuation">(</span>articles<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>-- Mem. usage decreased to  5.56 Mb (50.0% reduction),time spend:0.00 min
</code></pre><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 拼上文章特征</span>
trn_user_item_feats_df <span class="token operator">=</span> trn_user_item_feats_df<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>articles<span class="token punctuation">,</span> left_on<span class="token operator">=</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> right_on<span class="token operator">=</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> val_user_item_feats_df <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> val_user_item_feats_df<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>articles<span class="token punctuation">,</span> left_on<span class="token operator">=</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> right_on<span class="token operator">=</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> <span class="token boolean">None</span>

tst_user_item_feats_df <span class="token operator">=</span> tst_user_item_feats_df<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>articles<span class="token punctuation">,</span> left_on<span class="token operator">=</span><span class="token string">&#39;click_article_id&#39;</span><span class="token punctuation">,</span> right_on<span class="token operator">=</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="召回文章的主题是否在用户的爱好里面" tabindex="-1"><a class="header-anchor" href="#召回文章的主题是否在用户的爱好里面"><span>召回文章的主题是否在用户的爱好里面</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>trn_user_item_feats_df<span class="token punctuation">[</span><span class="token string">&#39;is_cat_hab&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> trn_user_item_feats_df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token keyword">if</span> x<span class="token punctuation">.</span>category_id <span class="token keyword">in</span> <span class="token builtin">set</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>cate_list<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> val_user_item_feats_df <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    val_user_item_feats_df<span class="token punctuation">[</span><span class="token string">&#39;is_cat_hab&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> val_user_item_feats_df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token keyword">if</span> x<span class="token punctuation">.</span>category_id <span class="token keyword">in</span> <span class="token builtin">set</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>cate_list<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> <span class="token boolean">None</span>
tst_user_item_feats_df<span class="token punctuation">[</span><span class="token string">&#39;is_cat_hab&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> tst_user_item_feats_df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token keyword">if</span> x<span class="token punctuation">.</span>category_id <span class="token keyword">in</span> <span class="token builtin">set</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>cate_list<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 线下验证</span>
<span class="token keyword">del</span> trn_user_item_feats_df<span class="token punctuation">[</span><span class="token string">&#39;cate_list&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">if</span> val_user_item_feats_df <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">del</span> val_user_item_feats_df<span class="token punctuation">[</span><span class="token string">&#39;cate_list&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> <span class="token boolean">None</span>
    
<span class="token keyword">del</span> tst_user_item_feats_df<span class="token punctuation">[</span><span class="token string">&#39;cate_list&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">del</span> trn_user_item_feats_df<span class="token punctuation">[</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">if</span> val_user_item_feats_df <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">del</span> val_user_item_feats_df<span class="token punctuation">[</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    val_user_item_feats_df <span class="token operator">=</span> <span class="token boolean">None</span>
    
<span class="token keyword">del</span> tst_user_item_feats_df<span class="token punctuation">[</span><span class="token string">&#39;article_id&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="保存特征" tabindex="-1"><a class="header-anchor" href="#保存特征"><span>保存特征</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 训练验证特征</span>
trn_user_item_feats_df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;trn_user_item_feats_df.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> val_user_item_feats_df <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    val_user_item_feats_df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;val_user_item_feats_df.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
tst_user_item_feats_df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span>save_path <span class="token operator">+</span> <span class="token string">&#39;tst_user_item_feats_df.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>特征工程和数据清洗转换是比赛中至关重要的一块， 因为<strong>数据和特征决定了机器学习的上限，而算法和模型只是逼近这个上限而已</strong>，所以特征工程的好坏往往决定着最后的结果，<strong>特征工程</strong>可以一步增强数据的表达能力，通过构造新特征，我们可以挖掘出数据的更多信息，使得数据的表达能力进一步放大。 在本节内容中，我们主要是先通过制作特征和标签把预测问题转成了监督学习问题，然后围绕着用户画像和文章画像进行一系列特征的制作， 此外，为了保证正负样本的数据均衡，我们还学习了负采样就技术等。当然本节内容只是对构造特征提供了一些思路，也请学习者们在学习过程中开启头脑风暴，尝试更多的构造特征的方法，也欢迎我们一块探讨和交流。</p>`,92);function m(v,b){const s=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[a("word2vec原理(一) CBOW与Skip-Gram模型基础"),t(s)])]),n("li",null,[n("a",k,[a("word2vec原理(二) 基于Hierarchical Softmax的模型"),t(s)])]),n("li",null,[n("a",d,[a("word2vec原理(三) 基于Negative Sampling的模型"),t(s)])])]),_])}const h=e(i,[["render",m],["__file","ch4.1.4_fet.html.vue"]]),y=JSON.parse('{"path":"/rcmd/ch04/ch4.1/ch4.1.4_fet.html","title":"特征工程","lang":"zh-CN","frontmatter":{"date":"2024-07-06T00:00:00.000Z","title":"特征工程","author":"Genhiy","order":4,"category":["推荐系统"],"tag":["无标签"],"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"导包","slug":"导包","link":"#导包","children":[]},{"level":2,"title":"df节省内存函数","slug":"df节省内存函数","link":"#df节省内存函数","children":[]},{"level":2,"title":"定义数据路径","slug":"定义数据路径","link":"#定义数据路径","children":[]},{"level":2,"title":"数据读取","slug":"数据读取","link":"#数据读取","children":[{"level":3,"title":"训练和验证集的划分","slug":"训练和验证集的划分","link":"#训练和验证集的划分","children":[]},{"level":3,"title":"获取历史点击和最后一次点击","slug":"获取历史点击和最后一次点击","link":"#获取历史点击和最后一次点击","children":[]},{"level":3,"title":"读取训练、验证及测试集","slug":"读取训练、验证及测试集","link":"#读取训练、验证及测试集","children":[]},{"level":3,"title":"读取召回列表","slug":"读取召回列表","link":"#读取召回列表","children":[]},{"level":3,"title":"读取各种Embedding","slug":"读取各种embedding","link":"#读取各种embedding","children":[]},{"level":3,"title":"读取文章信息","slug":"读取文章信息","link":"#读取文章信息","children":[]},{"level":3,"title":"读取数据","slug":"读取数据","link":"#读取数据","children":[]}]},{"level":2,"title":"对训练数据做负采样","slug":"对训练数据做负采样","link":"#对训练数据做负采样","children":[]},{"level":2,"title":"将召回数据转换成字典","slug":"将召回数据转换成字典","link":"#将召回数据转换成字典","children":[]},{"level":2,"title":"用户历史行为相关特征","slug":"用户历史行为相关特征","link":"#用户历史行为相关特征","children":[]},{"level":2,"title":"用户和文章特征","slug":"用户和文章特征","link":"#用户和文章特征","children":[{"level":3,"title":"用户相关特征","slug":"用户相关特征","link":"#用户相关特征","children":[]},{"level":3,"title":"用户特征直接读入","slug":"用户特征直接读入","link":"#用户特征直接读入","children":[]},{"level":3,"title":"文章的特征直接读入","slug":"文章的特征直接读入","link":"#文章的特征直接读入","children":[]},{"level":3,"title":"召回文章的主题是否在用户的爱好里面","slug":"召回文章的主题是否在用户的爱好里面","link":"#召回文章的主题是否在用户的爱好里面","children":[]}]},{"level":2,"title":"保存特征","slug":"保存特征","link":"#保存特征","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":22.88,"words":6864},"filePathRelative":"rcmd/ch04/ch4.1/ch4.1.4_fet.md","localizedDate":"2024年7月6日"}');export{h as comp,y as data};
